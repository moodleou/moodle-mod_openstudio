{"version":3,"file":"orderposts.min.js","sources":["../src/orderposts.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * JavaScript to order posts on folder.\n *\n * @package\n * @copyright 2017 The Open University\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * @module mod_openstudio/orderposts\n */\ndefine([\n    'jquery',\n    'core/ajax',\n    'core/str',\n    'mod_openstudio/osdialogue',\n], function($, Ajax, Str, osDialogue) {\n    var t;\n    t = {\n\n        /**\n         * Module config. Passed from server side.\n         * {\n         *     contents: [\n         *         {\n         *             fullname: string,\n         *             date: string,\n         *             userpicturehtml: string,\n         *             order: int,\n         *             orderstring: string,\n         *             locked: bool\n         *         }\n         *     ]\n         * }\n         */\n        mconfig: null,\n\n        /**\n         * Order posts dialogue instance.\n         */\n        dialogue: null,\n\n        /**\n         * List out all of css selector used in this module.\n         */\n        CSS: {\n            // Buttons.\n            ORDER_POSTS_BUTTON: '#id_orderpost',\n            MOVE_UP_BUTTON: '.openstudio-orderpost-item-moveup-button',\n            MOVE_DOWN_BUTTON: '.openstudio-orderpost-item-movedown-button',\n            SAVE_ORDER_BUTTON: '.openstudio-orderpost-save-button',\n\n            // Input.\n            ORDER_NUMBER_INPUT: '.openstudio-orderpost-item-order-number-input',\n\n            // Post item.\n            ITEM_CONTAINER: '.openstudio-orderpost-item',\n            ITEM_ORDER: '.openstudio-orderpost-item-order',\n\n            // Dialogue.\n            ORDER_POSTS_DIALOGUE_CONTAINER: '.openstudio-orderposts-dialogue'\n        },\n\n        /**\n         * Initialize module.\n         *\n         * @method init\n         * @param {JSON} options  The settings for this feature.\n         */\n        init: async function(options) {\n\n            t.mconfig = options;\n\n            // Create order posts dialogue.\n            t.dialogue = await t.createOrderPostsDialogue();\n            // Register events.\n            $(t.CSS.ORDER_POSTS_BUTTON).on('click', function() {\n                if (t.dialogue) {\n                    $('.openstudio-folder-posts-dialogue .openstudio-orderpost').remove();\n                    t.setBody(t.dialogue);\n                    t.dialogue.show();\n                    var listorder = t.getListOrderPost();\n                    var sortedlistorderpost = [];\n                    $.each(listorder, function(index, value) {\n                        sortedlistorderpost[index] = value[0];\n                    });\n                    t.mconfig.listorder = sortedlistorderpost.join(',');\n                }\n            });\n\n            $('body')\n                .delegate(t.CSS.SAVE_ORDER_BUTTON, 'click', t.saveOrder)\n                .delegate(t.CSS.MOVE_UP_BUTTON, 'click', t.moveUp)\n                .delegate(t.CSS.MOVE_DOWN_BUTTON, 'click', t.moveDown)\n                .delegate(t.CSS.ORDER_NUMBER_INPUT, 'keyup', t.handleNumberInputEnter)\n                .delegate(t.CSS.ORDER_NUMBER_INPUT, 'blur', t.handleNumberInputBlur);\n        },\n\n        /**\n         * Create order posts dialogue and some events on it.\n         *\n         * @returns {Promise<Modal>}\n         * @method createOrderPostsDialogue\n         */\n        createOrderPostsDialogue: async function() {\n            /**\n             * Set header for dialog.\n             *\n             * @param {Object} dialogue\n             * @method setHeader\n             */\n            function setHeader(dialogue) {\n                Str\n                    .get_string('folderorderpost', 'mod_openstudio')\n                    .done(function(s) {\n                        dialogue.setTitle('<span>' + s + '</span>');\n                    });\n            }\n\n            const dialogue = await osDialogue.create({\n                isVerticallyCentered: true,\n                templateContext: {\n                    extraClasses: t.CSS.ORDER_POSTS_DIALOGUE_CONTAINER.replace('.', '') + ' openstudio-folder-posts-dialogue',\n                },\n            });\n\n            setHeader(dialogue);\n            t.setBody(dialogue);\n\n            return dialogue;\n        },\n\n        /**\n         * Set body for dialog.\n         *\n         * @param {object} dialogue object\n         * @method setBody\n         */\n        setBody: function(dialogue) {\n\n            M.util.js_pending('openstudioGetOrderPostsFolderContent');\n            const promises = Ajax.call([{\n                methodname: 'mod_openstudio_external_get_order_posts',\n                args: {\n                    cmid: t.mconfig.cmid,\n                    folderid: t.mconfig.folderid,\n                }\n            }]);\n\n            promises[0]\n                .done(function(res) {\n                   dialogue.setBody(res.html);\n                    // Disable first move up button and last move down button.\n                    t.disableFirstLastButton();\n                    $(document).ready(t.disableContentButton);\n                    t.checkReorder();\n                    t.inputPosition();\n                    $(t.CSS.SAVE_ORDER_BUTTON).attr(\"disabled\", \"disabled\");\n                })\n                .always(function() {\n                    M.util.js_complete('openstudioGetOrderPostsFolderContent');\n                })\n                .fail(function(ex) {\n                    window.console.error('Log request failed ' + ex.message);\n                });\n        },\n\n        /**\n         * Move item up.\n         *\n         * @method moveUp\n         */\n        moveUp: function() {\n            var item = $(this).closest(t.CSS.ITEM_CONTAINER);\n            var itemOrder = item.find(t.CSS.ITEM_ORDER).attr('data-order');\n            itemOrder = parseInt(itemOrder);\n\n            // Swap items.\n            t.swapItems(itemOrder, itemOrder - 1, item);\n        },\n\n        /**\n         * Move item down.\n         *\n         * @method moveDown\n         */\n        moveDown: function() {\n            var item = $(this).closest(t.CSS.ITEM_CONTAINER);\n            var itemOrder = item.find(t.CSS.ITEM_ORDER).attr('data-order');\n            itemOrder = parseInt(itemOrder);\n\n            // Swap items.\n            t.swapItems(itemOrder, itemOrder + 1, item);\n        },\n\n        /**\n         * Move item to certain position.\n         *\n         * @method moveTo\n         */\n        moveTo: function() {\n\n            var desiredOrder = $(this).val();\n            if (desiredOrder <= 0 || desiredOrder > t.mconfig.total) {\n                return;\n            }\n            var item = $(this).closest(t.CSS.ITEM_CONTAINER);\n            var itemOrder = item.find(t.CSS.ITEM_ORDER).attr('data-order');\n            itemOrder = parseInt(itemOrder);\n\n            var lastOrder = $(t.CSS.ITEM_CONTAINER).last().find(t.CSS.ITEM_ORDER).attr('data-order');\n            lastOrder = parseInt(lastOrder);\n\n            var currentorder = $('div[data-order=' + itemOrder + ']').hasClass('openstudio-orderpost-item-canreorder');\n            var itemMove = $('div[data-order=' + desiredOrder + ']').hasClass('openstudio-orderpost-item-canreorder');\n            if (currentorder && itemMove) {\n                Str\n                .get_string('foldercontentcannotreorder', 'mod_openstudio')\n                .done(function(s) {\n                   t.showErrorMessage(s);\n                });\n                return;\n            }\n\n            // To cover the case that user's input is out of boundary.\n            if (desiredOrder > lastOrder) {\n                desiredOrder = lastOrder;\n            }\n\n            if (desiredOrder < 1) {\n                desiredOrder = 1;\n            }\n\n            // Swap items.\n            t.swapItems(itemOrder, desiredOrder, item);\n        },\n\n        /**\n         * Save order to database.\n         *\n         * @method saveOrder\n         */\n        saveOrder: function() {\n            $(t.CSS.ORDER_NUMBER_INPUT).each(function() {\n                var order = $(this).val().trim();\n                var item = $(this).closest(t.CSS.ITEM_CONTAINER);\n                var itemOrder = item.find(t.CSS.ITEM_ORDER).attr('data-order');\n                itemOrder = parseInt(itemOrder);\n                if (order != itemOrder) {\n                    t.swapItems(itemOrder, order, item);\n                }\n            });\n\n            M.util.js_pending('openstudioOrderPostsFolderContent');\n            var textlistcontent = t.getListOrderPost(true);\n            var newlistcontent = {};\n            var currentorder = '';\n            var neworder = '';\n\n            // Get new order list.\n            $.each(textlistcontent, function(index, value) {\n                neworder = value[0];\n                currentorder = value[1];\n                if (neworder != currentorder) {\n                    newlistcontent[currentorder - 1] = neworder;\n                }\n            });\n\n            textlistcontent = '';\n            $.each(newlistcontent, function(index, value) {\n                textlistcontent += index + '-' + value + ',';\n            });\n\n            textlistcontent = textlistcontent.substr(0, textlistcontent.length - 1);\n\n            var promises = Ajax.call([{\n                methodname: 'mod_openstudio_external_order_posts',\n                args: {\n                    cmid: t.mconfig.cmid,\n                    folderid: t.mconfig.folderid,\n                    listorderporst: textlistcontent\n                }\n            }]);\n\n            promises[0]\n                .done(function() {\n                    window.location.reload();\n                })\n                .always(function() {\n                    M.util.js_complete('openstudioOrderPostsFolderContent');\n                })\n                .fail(function(ex) {\n                    window.console.error('Log request failed ' + ex.message);\n                });\n        },\n\n        /**\n         * Swap position between 2 items.\n         *\n         * @param {int} fromOrderNumber Original order\n         * @param {int} toOrderNumber Desired order\n         * @param {object} element Dom Element\n         * @method swapItems\n         */\n        swapItems: function(fromOrderNumber, toOrderNumber, element) {\n            var reoderLock = false;\n            var targetElement = $(t.CSS.ITEM_ORDER + '[data-order=\"' + toOrderNumber + '\"]');\n\n            if (element.find(t.CSS.ITEM_ORDER).hasClass('openstudio-orderpost-item-canreorder')) {\n                reoderLock = t.checkReorderLock(fromOrderNumber, toOrderNumber);\n            }\n\n            if (reoderLock == true) {\n                Str\n                .get_string('foldercontentcannotreorder', 'mod_openstudio')\n                .done(function(s) {\n                   t.showErrorMessage(s);\n                });\n                return;\n            }\n\n            if (targetElement.length > 0) {\n                if (fromOrderNumber < toOrderNumber) {\n                    // Move down\n                    targetElement.closest(t.CSS.ITEM_CONTAINER).after(element);\n                } else {\n                    // Move up\n                    targetElement.closest(t.CSS.ITEM_CONTAINER).before(element);\n                }\n\n                // Re-range the order numbers.\n                $(t.CSS.ITEM_CONTAINER).each(function(index) {\n                    index = index + 1;\n                    var orderNumberString = (index < 10) ? '0' + index : '' + index;\n                    $(this).find(t.CSS.ITEM_ORDER)\n                        .attr('data-order', index)\n                        .text(orderNumberString);\n\n                    $(this).find(t.CSS.ORDER_NUMBER_INPUT)\n                        .val(index);\n\n                    // Replace title attribute of move up button with new order.\n                    var moveUpButtonTitle = $(this).find(t.CSS.MOVE_UP_BUTTON).attr('title');\n                    var moveUpButtonOrderArr = moveUpButtonTitle.match(/([0-9-.]+)/g);\n                    if (moveUpButtonOrderArr !== null) {\n                        var moveUpButtonOrderArrLength = moveUpButtonOrderArr.length;\n                        // Get last match.\n                        var moveUpButtonOrder = moveUpButtonOrderArr[moveUpButtonOrderArrLength - 1];\n                        var moveUpButtonNewTitle = moveUpButtonTitle.replace(moveUpButtonOrder, index - 1 + '.');\n\n                        $(this).find(t.CSS.MOVE_UP_BUTTON).attr('title', moveUpButtonNewTitle);\n                    }\n\n                    // Replace title attribute of move down button with new order.\n                    var moveDownButtonTitle = $(this).find(t.CSS.MOVE_DOWN_BUTTON).attr('title');\n                    var moveDownButtonOrderArr = moveDownButtonTitle.match(/([0-9-.]+)/g);\n                    if (moveDownButtonOrderArr !== null) {\n                        var moveDownButtonOrderArrLength = moveDownButtonOrderArr.length;\n                        // Get last match.\n                        var moveDownButtonOrder = moveDownButtonOrderArr[moveDownButtonOrderArrLength - 1];\n                        var moveDownButtonNewTitle = moveDownButtonTitle.replace(moveDownButtonOrder, index + 1 + '.');\n\n                        $(this).find(t.CSS.MOVE_DOWN_BUTTON).attr('title', moveDownButtonNewTitle);\n                    }\n\n                });\n            }\n\n            // Handle Save Order Button\n            var currentorder = t.mconfig.listorder;\n            var sortable = t.getListOrderPost();\n            var sortedlistorderpost = [];\n            $.each(sortable, function(index, value) {\n                sortedlistorderpost[index] = value[0];\n            });\n            var neworder = sortedlistorderpost.join(',');\n\n            t.enableSaveOrder(currentorder, neworder);\n            t.checkReorder();\n            t.disableContentButton();\n            t.disableFirstLastButton();\n        },\n\n        /**\n         * Get list order porst according to their new positions\n         *\n         * @return {string} textlistcontent list of order post\n         * @param {bool} filterBookContent book content\n         * @method getListOrderPost\n         * @return {Array} sortable\n         */\n        getListOrderPost: function(filterBookContent) {\n            var listorderporst = {};\n            // Re-range the order numbers.\n            $(t.CSS.ITEM_CONTAINER).each(function() {\n                var orderElement = $(this).find(t.CSS.ITEM_ORDER);\n                if (filterBookContent) {\n                    if (orderElement.hasClass('openstudio-orderpost-item-book')) {\n                        return;\n                    }\n                }\n                listorderporst[orderElement.attr('data-order')]\n                    = orderElement.attr('data-original-order');\n            });\n\n            var sortable = [];\n            for (var order in listorderporst) {\n                sortable.push([order, listorderporst[order]]);\n            }\n\n            sortable.sort(function(a, b) {\n                return a[1] - b[1];\n            });\n\n            return sortable;\n        },\n\n        /**\n         * Enable save order .\n         *\n         * @param {string} currentorder list of current order\n         * @param {string} neworder list of new order\n         * @method enableSaveOrder\n         */\n        enableSaveOrder: function(currentorder, neworder) {\n            if (currentorder != neworder) {\n                $(t.CSS.SAVE_ORDER_BUTTON).removeAttr(\"disabled\");\n            } else {\n               $(t.CSS.SAVE_ORDER_BUTTON).attr(\"disabled\", \"disabled\");\n            }\n        },\n\n        /**\n         * Input move item to certain position.\n         *\n         * @method enableSaveOrder\n         */\n        inputPosition: function() {\n            $(document).ready(function() {\n                $(t.CSS.ORDER_NUMBER_INPUT).keyup(function() {\n                    t.enableSaveOrder($(this).val().length, 0);\n                    var order = $(this).val();\n                    if (order && !$.isNumeric(order)) {\n                        Str\n                        .get_string('errormoveslotnumeric', 'mod_openstudio')\n                        .done(function(s) {\n                           t.showErrorMessage(s);\n                        });\n                    } else {\n                        if (parseInt(order) > t.mconfig.total || parseInt(order) <= 0) {\n                            Str\n                            .get_string('errormoveslotoutofrange', 'mod_openstudio')\n                            .done(function(s) {\n                               t.showErrorMessage(s);\n                            });\n                        } else {\n                            t.showErrorMessage('');\n                        }\n                    }\n                    $(this).val(order);\n                });\n            });\n        },\n\n        /**\n         * Disable first move up button and last move down button.\n         *\n         * @method disableFirstLastButton\n         */\n        disableFirstLastButton: function() {\n            // Enable all move-up, move-down buttons except booked item.\n            // Book items are back contents that have never uploaded yet.\n            $(t.CSS.MOVE_UP_BUTTON + ':not(.openstudio-orderpost-item-book)').removeAttr(\"disabled\");\n            $(t.CSS.MOVE_DOWN_BUTTON + ':not(.openstudio-orderpost-item-book)').removeAttr(\"disabled\");\n\n            $(t.CSS.MOVE_UP_BUTTON + ':first').attr(\"disabled\", \"disabled\");\n            $(t.CSS.MOVE_DOWN_BUTTON + ':last').attr(\"disabled\", \"disabled\");\n\n        },\n\n        /**\n         * Disable move up button and last move down button.\n         *\n         * @method enableSaveOrder\n         */\n        disableContentButton: function() {\n            $('.openstudio-orderpost-item-book').attr(\"disabled\", \"disabled\");\n        },\n\n        /**\n         * Disable move up button and move down button.\n         *\n         * @method checkReorder\n         */\n        checkReorder: function() {\n            $(t.CSS.ITEM_CONTAINER).each(function() {\n                var classCheck = 'openstudio-orderpost-item-canreorder';\n                if ($(this).find(t.CSS.ITEM_ORDER).hasClass('openstudio-orderpost-item-canreorder')) {\n                    var nextItem = $(this).next();\n                    if (nextItem.find(t.CSS.ITEM_ORDER).hasClass(classCheck)) {\n                        t.disableContentButton();\n                    } else {\n                        t.showErrorMessage('');\n                    }\n                }\n\n            });\n        },\n\n        /**\n         * Handle reorder lock content\n         *\n         * @param {int} currentOrderNumber Original order\n         * @param {int} toOrderNumber Desired order\n         * @return {bool} true when move this content beyond other fixed contents.\n         */\n        checkReorderLock: function(currentOrderNumber, toOrderNumber) {\n            var firstitem = '';\n            var lastitem = '';\n            var currentElement = '';\n            var classCheck = 'openstudio-orderpost-item-canreorder';\n            if (currentOrderNumber > toOrderNumber) {\n                firstitem = toOrderNumber;\n                lastitem = currentOrderNumber;\n            } else {\n                firstitem = currentOrderNumber;\n                lastitem = toOrderNumber;\n            }\n\n            if (currentOrderNumber < toOrderNumber) {\n                firstitem = firstitem + 1;\n                while (firstitem <= lastitem) {\n                    currentElement = $(t.CSS.ITEM_ORDER + '[data-order=\"' + firstitem + '\"]');\n                    if (currentElement.hasClass(classCheck)) {\n                        return true;\n                    }\n                    firstitem++;\n                }\n            } else {\n                lastitem = lastitem - 1;\n                while (lastitem >= firstitem) {\n                    currentElement = $(t.CSS.ITEM_ORDER + '[data-order=\"' + lastitem + '\"]');\n                    if (currentElement.hasClass(classCheck)) {\n                        return true;\n                    }\n                    lastitem--;\n                }\n            }\n\n            return false;\n        },\n\n        /**\n         * Show error message in the title next  label text.\n         *\n         * @method showErrorMessage\n         * @param {string} message The error text to use\n         */\n        showErrorMessage: function(message) {\n            $('.openstudio-message-error').text(message);\n        },\n\n        /**\n         * Triggered whenever user press enter key on order input.\n         *\n         * @method handleNumberInputEnter\n         * @param {object} e Dom Event\n         */\n        handleNumberInputEnter: function(e) {\n            if (e.which !== 13) { // Press enter key.\n                return;\n            }\n\n            t.moveTo.call(this);\n        },\n\n        /**\n         * Triggered whenever order input is lost focus.\n         *\n         * @method handleNumberInputBlur\n         */\n        handleNumberInputBlur: function() {\n            t.moveTo.call(this);\n        }\n    };\n\n    return t;\n});\n"],"names":["define","$","Ajax","Str","osDialogue","t","mconfig","dialogue","CSS","ORDER_POSTS_BUTTON","MOVE_UP_BUTTON","MOVE_DOWN_BUTTON","SAVE_ORDER_BUTTON","ORDER_NUMBER_INPUT","ITEM_CONTAINER","ITEM_ORDER","ORDER_POSTS_DIALOGUE_CONTAINER","init","async","options","createOrderPostsDialogue","on","remove","setBody","show","listorder","getListOrderPost","sortedlistorderpost","each","index","value","join","delegate","saveOrder","moveUp","moveDown","handleNumberInputEnter","handleNumberInputBlur","create","isVerticallyCentered","templateContext","extraClasses","replace","get_string","done","s","setTitle","setHeader","M","util","js_pending","call","methodname","args","cmid","folderid","res","html","disableFirstLastButton","document","ready","disableContentButton","checkReorder","inputPosition","attr","always","js_complete","fail","ex","window","console","error","message","item","this","closest","itemOrder","find","parseInt","swapItems","moveTo","desiredOrder","val","total","lastOrder","last","currentorder","hasClass","itemMove","showErrorMessage","order","trim","textlistcontent","newlistcontent","neworder","substr","length","listorderporst","location","reload","fromOrderNumber","toOrderNumber","element","reoderLock","targetElement","checkReorderLock","after","before","orderNumberString","text","moveUpButtonTitle","moveUpButtonOrderArr","match","moveUpButtonOrder","moveUpButtonNewTitle","moveDownButtonTitle","moveDownButtonOrderArr","moveDownButtonOrder","moveDownButtonNewTitle","sortable","enableSaveOrder","filterBookContent","orderElement","push","sort","a","b","removeAttr","keyup","isNumeric","next","currentOrderNumber","firstitem","lastitem","classCheck","e","which"],"mappings":";;;;;;;AA0BAA,mCAAO,CACH,SACA,YACA,WACA,8BACD,SAASC,EAAGC,KAAMC,IAAKC,gBAClBC,SACJA,EAAI,CAiBAC,QAAS,KAKTC,SAAU,KAKVC,IAAK,CAEDC,mBAAoB,gBACpBC,eAAgB,2CAChBC,iBAAkB,6CAClBC,kBAAmB,oCAGnBC,mBAAoB,gDAGpBC,eAAgB,6BAChBC,WAAY,mCAGZC,+BAAgC,mCASpCC,KAAMC,eAAeC,SAEjBd,EAAEC,QAAUa,QAGZd,EAAEE,eAAiBF,EAAEe,2BAErBnB,EAAEI,EAAEG,IAAIC,oBAAoBY,GAAG,SAAS,cAChChB,EAAEE,SAAU,CACZN,EAAE,2DAA2DqB,SAC7DjB,EAAEkB,QAAQlB,EAAEE,UACZF,EAAEE,SAASiB,WACPC,UAAYpB,EAAEqB,mBACdC,oBAAsB,GAC1B1B,EAAE2B,KAAKH,WAAW,SAASI,MAAOC,OAC9BH,oBAAoBE,OAASC,MAAM,MAEvCzB,EAAEC,QAAQmB,UAAYE,oBAAoBI,KAAK,SAIvD9B,EAAE,QACG+B,SAAS3B,EAAEG,IAAII,kBAAmB,QAASP,EAAE4B,WAC7CD,SAAS3B,EAAEG,IAAIE,eAAgB,QAASL,EAAE6B,QAC1CF,SAAS3B,EAAEG,IAAIG,iBAAkB,QAASN,EAAE8B,UAC5CH,SAAS3B,EAAEG,IAAIK,mBAAoB,QAASR,EAAE+B,wBAC9CJ,SAAS3B,EAAEG,IAAIK,mBAAoB,OAAQR,EAAEgC,wBAStDjB,yBAA0BF,uBAehBX,eAAiBH,WAAWkC,OAAO,CACrCC,sBAAsB,EACtBC,gBAAiB,CACbC,aAAcpC,EAAEG,IAAIQ,+BAA+B0B,QAAQ,IAAK,IAAM,uDAX3DnC,UACfJ,IACKwC,WAAW,kBAAmB,kBAC9BC,MAAK,SAASC,GACXtC,SAASuC,SAAS,SAAWD,EAAI,cAW7CE,CAAUxC,UACVF,EAAEkB,QAAQhB,UAEHA,UASXgB,QAAS,SAAShB,UAEdyC,EAAEC,KAAKC,WAAW,wCACDhD,KAAKiD,KAAK,CAAC,CACxBC,WAAY,0CACZC,KAAM,CACFC,KAAMjD,EAAEC,QAAQgD,KAChBC,SAAUlD,EAAEC,QAAQiD,aAInB,GACJX,MAAK,SAASY,KACZjD,SAASgB,QAAQiC,IAAIC,MAEpBpD,EAAEqD,yBACFzD,EAAE0D,UAAUC,MAAMvD,EAAEwD,sBACpBxD,EAAEyD,eACFzD,EAAE0D,gBACF9D,EAAEI,EAAEG,IAAII,mBAAmBoD,KAAK,WAAY,eAE/CC,QAAO,WACJjB,EAAEC,KAAKiB,YAAY,2CAEtBC,MAAK,SAASC,IACXC,OAAOC,QAAQC,MAAM,sBAAwBH,GAAGI,aAS5DtC,OAAQ,eACAuC,KAAOxE,EAAEyE,MAAMC,QAAQtE,EAAEG,IAAIM,gBAC7B8D,UAAYH,KAAKI,KAAKxE,EAAEG,IAAIO,YAAYiD,KAAK,cACjDY,UAAYE,SAASF,WAGrBvE,EAAE0E,UAAUH,UAAWA,UAAY,EAAGH,OAQ1CtC,SAAU,eACFsC,KAAOxE,EAAEyE,MAAMC,QAAQtE,EAAEG,IAAIM,gBAC7B8D,UAAYH,KAAKI,KAAKxE,EAAEG,IAAIO,YAAYiD,KAAK,cACjDY,UAAYE,SAASF,WAGrBvE,EAAE0E,UAAUH,UAAWA,UAAY,EAAGH,OAQ1CO,OAAQ,eAEAC,aAAehF,EAAEyE,MAAMQ,WACvBD,cAAgB,GAAKA,aAAe5E,EAAEC,QAAQ6E,YAG9CV,KAAOxE,EAAEyE,MAAMC,QAAQtE,EAAEG,IAAIM,gBAC7B8D,UAAYH,KAAKI,KAAKxE,EAAEG,IAAIO,YAAYiD,KAAK,cACjDY,UAAYE,SAASF,eAEjBQ,UAAYnF,EAAEI,EAAEG,IAAIM,gBAAgBuE,OAAOR,KAAKxE,EAAEG,IAAIO,YAAYiD,KAAK,cAC3EoB,UAAYN,SAASM,eAEjBE,aAAerF,EAAE,kBAAoB2E,UAAY,KAAKW,SAAS,wCAC/DC,SAAWvF,EAAE,kBAAoBgF,aAAe,KAAKM,SAAS,wCAC9DD,cAAgBE,SAChBrF,IACCwC,WAAW,6BAA8B,kBACzCC,MAAK,SAASC,GACZxC,EAAEoF,iBAAiB5C,OAMtBoC,aAAeG,YACfH,aAAeG,WAGfH,aAAe,IACfA,aAAe,GAInB5E,EAAE0E,UAAUH,UAAWK,aAAcR,SAQzCxC,UAAW,WACPhC,EAAEI,EAAEG,IAAIK,oBAAoBe,MAAK,eACzB8D,MAAQzF,EAAEyE,MAAMQ,MAAMS,OACtBlB,KAAOxE,EAAEyE,MAAMC,QAAQtE,EAAEG,IAAIM,gBAC7B8D,UAAYH,KAAKI,KAAKxE,EAAEG,IAAIO,YAAYiD,KAAK,cAE7C0B,QADJd,UAAYE,SAASF,aAEjBvE,EAAE0E,UAAUH,UAAWc,MAAOjB,SAItCzB,EAAEC,KAAKC,WAAW,yCACd0C,gBAAkBvF,EAAEqB,kBAAiB,GACrCmE,eAAiB,GACjBP,aAAe,GACfQ,SAAW,GAGf7F,EAAE2B,KAAKgE,iBAAiB,SAAS/D,MAAOC,OACpCgE,SAAWhE,MAAM,GACjBwD,aAAexD,MAAM,GACjBgE,UAAYR,eACZO,eAAeP,aAAe,GAAKQ,aAI3CF,gBAAkB,GAClB3F,EAAE2B,KAAKiE,gBAAgB,SAAShE,MAAOC,OACnC8D,iBAAmB/D,MAAQ,IAAMC,MAAQ,OAG7C8D,gBAAkBA,gBAAgBG,OAAO,EAAGH,gBAAgBI,OAAS,GAEtD9F,KAAKiD,KAAK,CAAC,CACtBC,WAAY,sCACZC,KAAM,CACFC,KAAMjD,EAAEC,QAAQgD,KAChBC,SAAUlD,EAAEC,QAAQiD,SACpB0C,eAAgBL,oBAIf,GACJhD,MAAK,WACFyB,OAAO6B,SAASC,YAEnBlC,QAAO,WACJjB,EAAEC,KAAKiB,YAAY,wCAEtBC,MAAK,SAASC,IACXC,OAAOC,QAAQC,MAAM,sBAAwBH,GAAGI,aAY5DO,UAAW,SAASqB,gBAAiBC,cAAeC,aAC5CC,YAAa,EACbC,cAAgBvG,EAAEI,EAAEG,IAAIO,WAAa,gBAAkBsF,cAAgB,SAEvEC,QAAQzB,KAAKxE,EAAEG,IAAIO,YAAYwE,SAAS,0CACxCgB,WAAalG,EAAEoG,iBAAiBL,gBAAiBC,gBAGnC,GAAdE,YASAC,cAAcR,OAAS,IACnBI,gBAAkBC,cAElBG,cAAc7B,QAAQtE,EAAEG,IAAIM,gBAAgB4F,MAAMJ,SAGlDE,cAAc7B,QAAQtE,EAAEG,IAAIM,gBAAgB6F,OAAOL,SAIvDrG,EAAEI,EAAEG,IAAIM,gBAAgBc,MAAK,SAASC,WAE9B+E,mBADJ/E,OAAgB,GACiB,GAAM,IAAMA,MAAQ,GAAKA,MAC1D5B,EAAEyE,MAAMG,KAAKxE,EAAEG,IAAIO,YACdiD,KAAK,aAAcnC,OACnBgF,KAAKD,mBAEV3G,EAAEyE,MAAMG,KAAKxE,EAAEG,IAAIK,oBACdqE,IAAIrD,WAGLiF,kBAAoB7G,EAAEyE,MAAMG,KAAKxE,EAAEG,IAAIE,gBAAgBsD,KAAK,SAC5D+C,qBAAuBD,kBAAkBE,MAAM,kBACtB,OAAzBD,qBAA+B,KAG3BE,kBAAoBF,qBAFSA,qBAAqBf,OAEoB,GACtEkB,qBAAuBJ,kBAAkBpE,QAAQuE,kBAAmBpF,MAAQ,EAAI,KAEpF5B,EAAEyE,MAAMG,KAAKxE,EAAEG,IAAIE,gBAAgBsD,KAAK,QAASkD,0BAIjDC,oBAAsBlH,EAAEyE,MAAMG,KAAKxE,EAAEG,IAAIG,kBAAkBqD,KAAK,SAChEoD,uBAAyBD,oBAAoBH,MAAM,kBACxB,OAA3BI,uBAAiC,KAG7BC,oBAAsBD,uBAFSA,uBAAuBpB,OAEsB,GAC5EsB,uBAAyBH,oBAAoBzE,QAAQ2E,oBAAqBxF,MAAQ,EAAI,KAE1F5B,EAAEyE,MAAMG,KAAKxE,EAAEG,IAAIG,kBAAkBqD,KAAK,QAASsD,iCAO3DhC,aAAejF,EAAEC,QAAQmB,UACzB8F,SAAWlH,EAAEqB,mBACbC,oBAAsB,GAC1B1B,EAAE2B,KAAK2F,UAAU,SAAS1F,MAAOC,OAC7BH,oBAAoBE,OAASC,MAAM,UAEnCgE,SAAWnE,oBAAoBI,KAAK,KAExC1B,EAAEmH,gBAAgBlC,aAAcQ,UAChCzF,EAAEyD,eACFzD,EAAEwD,uBACFxD,EAAEqD,8BAnEEvD,IACCwC,WAAW,6BAA8B,kBACzCC,MAAK,SAASC,GACZxC,EAAEoF,iBAAiB5C,OA2E9BnB,iBAAkB,SAAS+F,uBACnBxB,eAAiB,GAErBhG,EAAEI,EAAEG,IAAIM,gBAAgBc,MAAK,eACrB8F,aAAezH,EAAEyE,MAAMG,KAAKxE,EAAEG,IAAIO,YAClC0G,mBACIC,aAAanC,SAAS,oCAI9BU,eAAeyB,aAAa1D,KAAK,eAC3B0D,aAAa1D,KAAK,+BAGxBuD,SAAW,OACV,IAAI7B,SAASO,eACdsB,SAASI,KAAK,CAACjC,MAAOO,eAAeP,gBAGzC6B,SAASK,MAAK,SAASC,EAAGC,UACfD,EAAE,GAAKC,EAAE,MAGbP,UAUXC,gBAAiB,SAASlC,aAAcQ,UAChCR,cAAgBQ,SAChB7F,EAAEI,EAAEG,IAAII,mBAAmBmH,WAAW,YAEvC9H,EAAEI,EAAEG,IAAII,mBAAmBoD,KAAK,WAAY,aASnDD,cAAe,WACX9D,EAAE0D,UAAUC,OAAM,WACd3D,EAAEI,EAAEG,IAAIK,oBAAoBmH,OAAM,WAC9B3H,EAAEmH,gBAAgBvH,EAAEyE,MAAMQ,MAAMc,OAAQ,OACpCN,MAAQzF,EAAEyE,MAAMQ,MAChBQ,QAAUzF,EAAEgI,UAAUvC,OACtBvF,IACCwC,WAAW,uBAAwB,kBACnCC,MAAK,SAASC,GACZxC,EAAEoF,iBAAiB5C,MAGlBiC,SAASY,OAASrF,EAAEC,QAAQ6E,OAASL,SAASY,QAAU,EACxDvF,IACCwC,WAAW,0BAA2B,kBACtCC,MAAK,SAASC,GACZxC,EAAEoF,iBAAiB5C,MAGtBxC,EAAEoF,iBAAiB,IAG3BxF,EAAEyE,MAAMQ,IAAIQ,cAUxBhC,uBAAwB,WAGpBzD,EAAEI,EAAEG,IAAIE,eAAiB,yCAAyCqH,WAAW,YAC7E9H,EAAEI,EAAEG,IAAIG,iBAAmB,yCAAyCoH,WAAW,YAE/E9H,EAAEI,EAAEG,IAAIE,eAAiB,UAAUsD,KAAK,WAAY,YACpD/D,EAAEI,EAAEG,IAAIG,iBAAmB,SAASqD,KAAK,WAAY,aASzDH,qBAAsB,WAClB5D,EAAE,mCAAmC+D,KAAK,WAAY,aAQ1DF,aAAc,WACV7D,EAAEI,EAAEG,IAAIM,gBAAgBc,MAAK,WAErB3B,EAAEyE,MAAMG,KAAKxE,EAAEG,IAAIO,YAAYwE,SAAS,0CACzBtF,EAAEyE,MAAMwD,OACVrD,KAAKxE,EAAEG,IAAIO,YAAYwE,SAHvB,wCAITlF,EAAEwD,uBAEFxD,EAAEoF,iBAAiB,SAcnCgB,iBAAkB,SAAS0B,mBAAoB9B,mBACvC+B,UAAY,GACZC,SAAW,GAEXC,WAAa,0CACbH,mBAAqB9B,eACrB+B,UAAY/B,cACZgC,SAAWF,qBAEXC,UAAYD,mBACZE,SAAWhC,eAGX8B,mBAAqB9B,kBACrB+B,WAAwB,EACjBA,WAAaC,UAAU,IACTpI,EAAEI,EAAEG,IAAIO,WAAa,gBAAkBqH,UAAY,MACjD7C,SAAS+C,mBACjB,EAEXF,qBAGJC,UAAsB,EACfA,UAAYD,WAAW,IACTnI,EAAEI,EAAEG,IAAIO,WAAa,gBAAkBsH,SAAW,MAChD9C,SAAS+C,mBACjB,EAEXD,kBAID,GASX5C,iBAAkB,SAASjB,SACvBvE,EAAE,6BAA6B4G,KAAKrC,UASxCpC,uBAAwB,SAASmG,GACb,KAAZA,EAAEC,OAINnI,EAAE2E,OAAO7B,KAAKuB,OAQlBrC,sBAAuB,WACnBhC,EAAE2E,OAAO7B,KAAKuB"}