{"version":3,"sources":["../src/notificationlist.js"],"names":["define","$","Ajax","Modal","Templates","SELECTORS","STOPBUTTONS","NOTIFICATIONBUTTON","UNREAD","priv","cmid","followflag","t","modal","init","on","stopNotifications","length","readNotifications","render","name","reShowList","window","setTimeout","addClass","e","preventDefault","template","notification","target","closest","contentid","currentTarget","data","commentid","find","text","done","html","body","handleModalButton","show","M","util","js_pending","method","args","cid","fid","mode","flagpromises","call","methodname","remove","js_complete","fail","console","error","hide","ids","map","get","promises","off","ex","message"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript functionality for the notifications list in the header.\n *\n * @package    mod_openstudio\n * @copyright  2017 The Open University\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or lat\n */\n\n/**\n * @module mod_openstudio/notificationlist\n */\ndefine(['jquery', 'core/ajax', 'core/modal', 'core/templates'],\n        function ($, Ajax, Modal, Templates) {\n    var SELECTORS = {\n        STOPBUTTONS: '.openstudio-notification-stopbutton',\n        NOTIFICATIONBUTTON: '.openstudio-nav-primary .dropdown.notifications',\n        UNREAD: '.openstudio-notifications-list .openstudio-notification-unread',\n    };\n\n    var priv = {\n        cmid: null,\n        followflag: null\n    };\n\n    var t = {\n        modal: null,\n\n        /**\n         * Set up event handlers\n         *\n         * @param {Integer} cmid\n         * @param {Integer} followflag\n         */\n        init: function(cmid, followflag) {\n            priv.cmid = cmid;\n            priv.followflag = followflag;\n            $(SELECTORS.STOPBUTTONS).on('click', t.stopNotifications);\n            // $('[data-toggle=\"tooltip\"]').tooltip();\n            if ($(SELECTORS.UNREAD).length > 0) {\n                $(SELECTORS.NOTIFICATIONBUTTON).on('click', t.readNotifications);\n            }\n            // Pre-fetch templates to make dialogue display quicker.\n            Templates.render('mod_openstudio/notification_modal', {name: ''});\n            Templates.render('core/modal_backdrop', {});\n        },\n\n        /**\n         * Re-show the notification list if it's hidden by clicking another control.\n         *\n         * This uses setTimeout() to push the event to the end of the queue, so it's always processed\n         * after the function to hide the list.\n         */\n        reShowList: function() {\n            window.setTimeout(function() { $(SELECTORS.NOTIFICATIONBUTTON).addClass('open'); }, 0);\n        },\n\n        /**\n         * Display the confirmation modal for stopping notifications on a piece of content.\n         *\n         * @param {Event} e\n         */\n        stopNotifications: function(e) {\n            e.preventDefault();\n            t.reShowList();\n            var template;\n            var notification = $(e.target).closest('.openstudio-notification');\n            var contentid = $(e.currentTarget).data('contentid');\n            var commentid = $(e.currentTarget).data('commentid');\n            if (commentid) {\n                template = 'mod_openstudio/commentnotification_modal';\n            } else {\n                template = 'mod_openstudio/notification_modal';\n            }\n            Templates\n                .render(template, {\n                    name: notification.find('.openstudio-notification-message a').text(),\n                    contentid: contentid,\n                    commentid: commentid\n                })\n                .done(function(html) {\n                    t.modal = new Modal(html);\n                    t.modal.body.find('button').on('click', t.handleModalButton);\n                    t.modal.show();\n                });\n        },\n\n        /**\n         * Handle the confirmation and cancel buttons from the stop modal.\n         * @param {Event} e\n         */\n        handleModalButton: function(e) {\n            t.reShowList();\n            var target = $(e.target);\n            if (target.data('action') === \"yes\") {\n                M.util.js_pending('openstudioStopNotifications');\n                var method;\n                var commentid = target.data('commentid');\n                var args = {\n                    cmid: priv.cmid,\n                    cid: target.data('contentid'),\n                    fid: priv.followflag\n                };\n                if (commentid) {\n                    args.commentid = commentid;\n                    method = 'mod_openstudio_external_flag_comment';\n                } else {\n                    args.mode = 'off';\n                    method = 'mod_openstudio_external_flag_content';\n                }\n                var flagpromises = Ajax.call([{\n                    methodname: method,\n                    args: args\n                }]);\n                flagpromises[0]\n                    .done(function() {\n                        $('.openstudio-notifications-list button[data-contentid=\"' + target.data('contentid') + '\"]').remove();\n                        M.util.js_complete('openstudioStopNotifications');\n                    })\n                    .fail(function() {\n                        window.console.error('Could not un-follow content');\n                        M.util.js_complete('openstudioStopNotifications');\n                    });\n            }\n            t.modal.hide();\n        },\n\n        readNotifications: function(e) {\n            e.preventDefault();\n            var ids = $(SELECTORS.UNREAD).map(function() {\n                return $(this).data(\"id\");\n            }).get();\n\n            var promises = Ajax.call([{\n                methodname: 'mod_openstudio_external_read_notifications',\n                args: {\n                    cmid: priv.cmid,\n                    ids: ids\n                }\n            }]);\n\n            promises[0]\n                .done(function() {\n                    $('.openstudio-navigation-notification-text').hide();\n                    // Only mark read once per page load.\n                    $(SELECTORS.NOTIFICATIONBUTTON).off('click', t.readNotifications);\n                })\n                .fail(function(ex) {\n                    window.console.error('Could not mark notifications read. ' + ex.message);\n                });\n        }\n    };\n\n    return t;\n});\n"],"file":"notificationlist.min.js"}