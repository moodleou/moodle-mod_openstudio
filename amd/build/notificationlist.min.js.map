{"version":3,"file":"notificationlist.min.js","sources":["../src/notificationlist.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript functionality for the notifications list in the header.\n *\n * @package    mod_openstudio\n * @copyright  2017 The Open University\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or lat\n */\n\n/**\n * @module mod_openstudio/notificationlist\n */\ndefine(['jquery', 'core/ajax', 'core/modal', 'core/templates'],\n        function ($, Ajax, Modal, Templates) {\n    var SELECTORS = {\n        STOPBUTTONS: '.openstudio-notification-stopbutton',\n        NOTIFICATIONBUTTON: '.openstudio-nav-primary .dropdown.notifications',\n        UNREAD: '.openstudio-notifications-list .openstudio-notification-unread',\n    };\n\n    var priv = {\n        cmid: null,\n        followflag: null\n    };\n\n    var t = {\n        modal: null,\n\n        /**\n         * Set up event handlers\n         *\n         * @param {Integer} cmid\n         * @param {Integer} followflag\n         */\n        init: function(cmid, followflag) {\n            priv.cmid = cmid;\n            priv.followflag = followflag;\n            $(SELECTORS.STOPBUTTONS).on('click', t.stopNotifications);\n            // $('[data-toggle=\"tooltip\"]').tooltip();\n            if ($(SELECTORS.UNREAD).length > 0) {\n                $(SELECTORS.NOTIFICATIONBUTTON).on('click', t.readNotifications);\n            }\n            // Pre-fetch templates to make dialogue display quicker.\n            Templates.render('mod_openstudio/notification_modal', {name: ''});\n            Templates.render('core/modal_backdrop', {});\n        },\n\n        /**\n         * Re-show the notification list if it's hidden by clicking another control.\n         *\n         * This uses setTimeout() to push the event to the end of the queue, so it's always processed\n         * after the function to hide the list.\n         */\n        reShowList: function() {\n            window.setTimeout(function() { $(SELECTORS.NOTIFICATIONBUTTON).addClass('open'); }, 0);\n        },\n\n        /**\n         * Display the confirmation modal for stopping notifications on a piece of content.\n         *\n         * @param {Event} e\n         */\n        stopNotifications: function(e) {\n            e.preventDefault();\n            t.reShowList();\n            var template;\n            var notification = $(e.target).closest('.openstudio-notification');\n            var contentid = $(e.currentTarget).data('contentid');\n            var commentid = $(e.currentTarget).data('commentid');\n            if (commentid) {\n                template = 'mod_openstudio/commentnotification_modal';\n            } else {\n                template = 'mod_openstudio/notification_modal';\n            }\n            Templates\n                .render(template, {\n                    name: notification.find('.openstudio-notification-message a').text(),\n                    contentid: contentid,\n                    commentid: commentid\n                })\n                .done(function(html) {\n                    t.modal = new Modal(html);\n                    t.modal.body.find('button').on('click', t.handleModalButton);\n                    t.modal.show();\n                });\n        },\n\n        /**\n         * Handle the confirmation and cancel buttons from the stop modal.\n         * @param {Event} e\n         */\n        handleModalButton: function(e) {\n            t.reShowList();\n            var target = $(e.target);\n            if (target.data('action') === \"yes\") {\n                M.util.js_pending('openstudioStopNotifications');\n                var method;\n                var commentid = target.data('commentid');\n                var args = {\n                    cmid: priv.cmid,\n                    cid: target.data('contentid'),\n                    fid: priv.followflag\n                };\n                if (commentid) {\n                    args.commentid = commentid;\n                    method = 'mod_openstudio_external_flag_comment';\n                } else {\n                    args.mode = 'off';\n                    method = 'mod_openstudio_external_flag_content';\n                }\n                var flagpromises = Ajax.call([{\n                    methodname: method,\n                    args: args\n                }]);\n                flagpromises[0]\n                    .done(function() {\n                        $('.openstudio-notifications-list button[data-contentid=\"' + target.data('contentid') + '\"]').remove();\n                        M.util.js_complete('openstudioStopNotifications');\n                    })\n                    .fail(function() {\n                        window.console.error('Could not un-follow content');\n                        M.util.js_complete('openstudioStopNotifications');\n                    });\n            }\n            t.modal.hide();\n        },\n\n        readNotifications: function(e) {\n            e.preventDefault();\n            var ids = $(SELECTORS.UNREAD).map(function() {\n                return $(this).data(\"id\");\n            }).get();\n\n            var promises = Ajax.call([{\n                methodname: 'mod_openstudio_external_read_notifications',\n                args: {\n                    cmid: priv.cmid,\n                    ids: ids\n                }\n            }]);\n\n            promises[0]\n                .done(function() {\n                    $('.openstudio-navigation-notification-text').hide();\n                    // Only mark read once per page load.\n                    $(SELECTORS.NOTIFICATIONBUTTON).off('click', t.readNotifications);\n                })\n                .fail(function(ex) {\n                    window.console.error('Could not mark notifications read. ' + ex.message);\n                });\n        }\n    };\n\n    return t;\n});\n"],"names":["define","$","Ajax","Modal","Templates","SELECTORS","priv","cmid","followflag","t","modal","init","on","stopNotifications","length","readNotifications","render","name","reShowList","window","setTimeout","addClass","e","template","preventDefault","notification","target","closest","contentid","currentTarget","data","commentid","find","text","done","html","body","handleModalButton","show","method","M","util","js_pending","args","cid","fid","mode","call","methodname","remove","js_complete","fail","console","error","hide","ids","map","this","get","off","ex","message"],"mappings":";;;;;;;AA0BAA,yCAAO,CAAC,SAAU,YAAa,aAAc,mBACrC,SAAUC,EAAGC,KAAMC,MAAOC,eAC1BC,sBACa,sCADbA,6BAEoB,kDAFpBA,iBAGQ,iEAGRC,KAAO,CACPC,KAAM,KACNC,WAAY,MAGZC,EAAI,CACJC,MAAO,KAQPC,KAAM,SAASJ,KAAMC,YACjBF,KAAKC,KAAOA,KACZD,KAAKE,WAAaA,WAClBP,EAAEI,uBAAuBO,GAAG,QAASH,EAAEI,mBAEnCZ,EAAEI,kBAAkBS,OAAS,GAC7Bb,EAAEI,8BAA8BO,GAAG,QAASH,EAAEM,mBAGlDX,UAAUY,OAAO,oCAAqC,CAACC,KAAM,KAC7Db,UAAUY,OAAO,sBAAuB,KAS5CE,WAAY,WACRC,OAAOC,YAAW,WAAanB,EAAEI,8BAA8BgB,SAAS,UAAY,IAQxFR,kBAAmB,SAASS,OAGpBC,SAFJD,EAAEE,iBACFf,EAAES,iBAEEO,aAAexB,EAAEqB,EAAEI,QAAQC,QAAQ,4BACnCC,UAAY3B,EAAEqB,EAAEO,eAAeC,KAAK,aACpCC,UAAY9B,EAAEqB,EAAEO,eAAeC,KAAK,aAEpCP,SADAQ,UACW,2CAEA,oCAEf3B,UACKY,OAAOO,SAAU,CACdN,KAAMQ,aAAaO,KAAK,sCAAsCC,OAC9DL,UAAWA,UACXG,UAAWA,YAEdG,MAAK,SAASC,MACX1B,EAAEC,MAAQ,IAAIP,MAAMgC,MACpB1B,EAAEC,MAAM0B,KAAKJ,KAAK,UAAUpB,GAAG,QAASH,EAAE4B,mBAC1C5B,EAAEC,MAAM4B,WAQpBD,kBAAmB,SAASf,GACxBb,EAAES,iBACEQ,OAASzB,EAAEqB,EAAEI,WACa,QAA1BA,OAAOI,KAAK,UAAqB,KAE7BS,OADJC,EAAEC,KAAKC,WAAW,mCAEdX,UAAYL,OAAOI,KAAK,aACxBa,KAAO,CACPpC,KAAMD,KAAKC,KACXqC,IAAKlB,OAAOI,KAAK,aACjBe,IAAKvC,KAAKE,YAEVuB,WACAY,KAAKZ,UAAYA,UACjBQ,OAAS,yCAETI,KAAKG,KAAO,MACZP,OAAS,wCAEMrC,KAAK6C,KAAK,CAAC,CAC1BC,WAAYT,OACZI,KAAMA,QAEG,GACRT,MAAK,WACFjC,EAAE,yDAA2DyB,OAAOI,KAAK,aAAe,MAAMmB,SAC9FT,EAAEC,KAAKS,YAAY,kCAEtBC,MAAK,WACFhC,OAAOiC,QAAQC,MAAM,+BACrBb,EAAEC,KAAKS,YAAY,kCAG/BzC,EAAEC,MAAM4C,QAGZvC,kBAAmB,SAASO,GACxBA,EAAEE,qBACE+B,IAAMtD,EAAEI,kBAAkBmD,KAAI,kBACvBvD,EAAEwD,MAAM3B,KAAK,SACrB4B,MAEYxD,KAAK6C,KAAK,CAAC,CACtBC,WAAY,6CACZL,KAAM,CACFpC,KAAMD,KAAKC,KACXgD,IAAKA,QAIJ,GACJrB,MAAK,WACFjC,EAAE,4CAA4CqD,OAE9CrD,EAAEI,8BAA8BsD,IAAI,QAASlD,EAAEM,sBAElDoC,MAAK,SAASS,IACXzC,OAAOiC,QAAQC,MAAM,sCAAwCO,GAAGC,qBAKzEpD"}