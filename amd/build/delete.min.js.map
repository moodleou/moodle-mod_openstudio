{"version":3,"file":"delete.min.js","sources":["../src/delete.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * JavaScript to manage delete content feature.\n *\n * @package\n * @copyright 2017 The Open University\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * @module mod_openstudio/delete\n */\ndefine([\n    'jquery',\n    'core/ajax',\n    'core/str',\n    'core/config',\n    'mod_openstudio/osdialogue',\n], function($, Ajax, Str, SiteConfig, osDialogue) {\n    var t;\n    t = {\n\n        /**\n         * Module config. Passed from server side.\n         * {\n         *     id: int,\n         *     folderid: int,\n         *     isfolder: bool,\n         *     folderid: int (optional),\n         *     isactivitycontent: bool\n         *\n         * }\n         */\n        mconfig: null,\n\n        /**\n         * Delete dialogue instance.\n         */\n        dialogue: null,\n\n        /**\n         * List out all of css selector used in this module.\n         */\n        CSS: {\n            DELETEBUTTON: '#id_deletebutton',\n            DIALOGHEADER: '.openstudio-dialogue-common-header',\n            DELETEDIALOGUECONTAINER: '.openstudio-delete-dialogue'\n        },\n\n        /**\n         * Initialize module.\n         *\n         * @method init\n         * @param {JSON} options  The settings for this feature.\n         */\n        init: async function(options) {\n\n            t.mconfig = options;\n\n            // Create delete dialog.\n            t.dialogue = await t.createDeleteDialogue();\n\n            // Click event on delete button.\n            $(t.CSS.DELETEBUTTON).on('click', function() {\n                if (t.dialogue) {\n                    t.dialogue.show();\n                }\n            });\n        },\n\n        /**\n         * Create delete dialogue and some events on it.\n         *\n         * @method createDeleteDialogue\n         * @returns {Promise<Modal>}\n         */\n        createDeleteDialogue: async function() {\n            /**\n             * Set header for dialog.\n             *\n             * @param {Object} dialogue\n             * @method setHeader\n             */\n            function setHeader(dialogue) {\n                const langstring = (t.mconfig.isfolder) ? 'folderdeletedfolder' : 'contentdeledialogueteheader';\n                Str\n                    .get_string(langstring, 'mod_openstudio')\n                    .done(function(s) {\n                        dialogue.setTitle('<span class=\"' + t.CSS.DIALOGHEADER.replace('.', '') +\n                            '\">' + s + '</span>');\n                    });\n            }\n\n            /**\n             * Set body for dialog.\n             *\n             * @param {Object} dialogue\n             * @method setBody\n             */\n            function setBody(dialogue) {\n                const langstring = (t.mconfig.isfolder) ? 'deleteconfirmfolder' : 'deleteconfirmcontent';\n                Str\n                    .get_string(langstring, 'mod_openstudio')\n                    .done(function(s) {\n                        dialogue.setBody(s);\n                    });\n            }\n\n            /**\n             * Set body for dialog.\n             *\n             * @param {Object} dialogue\n             * @method setBody\n             */\n            function setFooter(dialogue) {\n                // Button [Cancel].\n                const cancelBtnProperty = {\n                    name: 'cancel',\n                    classNames: 'openstudio-delete-cancel-btn',\n                    action: 'hide',\n                };\n\n                // Button [Delete].\n                const deleteBtnProperty = {\n                    name: 'delete',\n                    classNames: 'openstudio-delete-ok-btn',\n                    events: {\n                        click: t.deleteContent.bind(t),\n                    },\n                };\n\n                Str\n                    .get_strings([\n                        {key: 'modulejsdialogcancel', component: 'mod_openstudio'},\n                        {key: 'deletelevel', component: 'mod_openstudio'},\n                    ])\n                    .done(function(s) {\n                        cancelBtnProperty.label = s[0];\n                        deleteBtnProperty.label = s[1];\n                        dialogue.addButton(deleteBtnProperty, ['footer']);\n                        dialogue.addButton(cancelBtnProperty, ['footer']);\n                    });\n            }\n            let hasFolderClass = '';\n            if (t.mconfig.isfolder) {\n                hasFolderClass = 'openstudio-folder';\n            } else if(t.mconfig.folderid) {\n                hasFolderClass = 'openstudio-is-belong-to-folder';\n            }\n\n            const dialogue = await osDialogue.create({\n                isVerticallyCentered: true,\n                templateContext: {\n                    extraClasses: t.CSS.DELETEDIALOGUECONTAINER.replace('.', '') + ' ' + hasFolderClass\n                },\n            });\n\n            setHeader(dialogue);\n            setBody(dialogue);\n            setFooter(dialogue);\n\n            return dialogue;\n        },\n\n        /**\n         * Delete content\n         * @method deleteContent\n         */\n        deleteContent: function() {\n\n            M.util.js_pending('openstudioDeleteContent');\n\n            var promises = Ajax.call([{\n                methodname: 'mod_openstudio_external_delete_content',\n                args: {\n                    id: t.mconfig.id,\n                    cid: t.mconfig.cid,\n                    containingfolder: t.mconfig.folderid\n                }\n            }]);\n\n            promises[0]\n                .done(function(res) {\n                    var url = '';\n                    if (t.mconfig.folderid) {\n                        url = SiteConfig.wwwroot + '/mod/openstudio/folder.php?sid=' + t.mconfig.folderid;\n                    } else {\n                        if (t.mconfig.isactivitycontent) {\n                            url = window.location.href;\n                        } else {\n                            url = SiteConfig.wwwroot + '/mod/openstudio/view.php?vid=' + res.vid;\n                        }\n                    }\n\n                    url += '&id=' + t.mconfig.id;\n\n                    // Redirect to containing view.\n                    window.location.href = url;\n                })\n                .always(function() {\n                    M.util.js_complete('openstudioDeleteContent');\n                })\n                .fail(function(ex) {\n                    window.console.error('Log request failed ' + ex.message);\n                });\n        },\n    };\n\n    return t;\n});\n"],"names":["define","$","Ajax","Str","SiteConfig","osDialogue","t","mconfig","dialogue","CSS","DELETEBUTTON","DIALOGHEADER","DELETEDIALOGUECONTAINER","init","async","options","createDeleteDialogue","on","show","hasFolderClass","isfolder","folderid","create","isVerticallyCentered","templateContext","extraClasses","replace","langstring","get_string","done","s","setTitle","setHeader","setBody","cancelBtnProperty","name","classNames","action","deleteBtnProperty","events","click","deleteContent","bind","get_strings","key","component","label","addButton","setFooter","M","util","js_pending","call","methodname","args","id","cid","containingfolder","res","url","wwwroot","isactivitycontent","window","location","href","vid","always","js_complete","fail","ex","console","error","message"],"mappings":";;;;;;;AA0BAA,+BAAO,CACH,SACA,YACA,WACA,cACA,8BACD,SAASC,EAAGC,KAAMC,IAAKC,WAAYC,gBAC9BC,SACJA,EAAI,CAaAC,QAAS,KAKTC,SAAU,KAKVC,IAAK,CACDC,aAAc,mBACdC,aAAc,qCACdC,wBAAyB,+BAS7BC,KAAMC,eAAeC,SAEjBT,EAAEC,QAAUQ,QAGZT,EAAEE,eAAiBF,EAAEU,uBAGrBf,EAAEK,EAAEG,IAAIC,cAAcO,GAAG,SAAS,WAC1BX,EAAEE,UACFF,EAAEE,SAASU,WAWvBF,qBAAsBF,qBAmEdK,eAAiB,GACjBb,EAAEC,QAAQa,SACVD,eAAiB,oBACXb,EAAEC,QAAQc,WAChBF,eAAiB,wCAGfX,eAAiBH,WAAWiB,OAAO,CACrCC,sBAAsB,EACtBC,gBAAiB,CACbC,aAAcnB,EAAEG,IAAIG,wBAAwBc,QAAQ,IAAK,IAAM,IAAMP,kCAtE1DX,gBACTmB,WAAcrB,EAAEC,QAAQa,SAAY,sBAAwB,8BAClEjB,IACKyB,WAAWD,WAAY,kBACvBE,MAAK,SAASC,GACXtB,SAASuB,SAAS,gBAAkBzB,EAAEG,IAAIE,aAAae,QAAQ,IAAK,IAChE,KAAOI,EAAI,cAoE3BE,CAAUxB,mBA1DOA,gBACPmB,WAAcrB,EAAEC,QAAQa,SAAY,sBAAwB,uBAClEjB,IACKyB,WAAWD,WAAY,kBACvBE,MAAK,SAASC,GACXtB,SAASyB,QAAQH,MAsD7BG,CAAQzB,mBA5CWA,gBAET0B,kBAAoB,CACtBC,KAAM,SACNC,WAAY,+BACZC,OAAQ,QAINC,kBAAoB,CACtBH,KAAM,SACNC,WAAY,2BACZG,OAAQ,CACJC,MAAOlC,EAAEmC,cAAcC,KAAKpC,KAIpCH,IACKwC,YAAY,CACT,CAACC,IAAK,uBAAwBC,UAAW,kBACzC,CAACD,IAAK,cAAeC,UAAW,oBAEnChB,MAAK,SAASC,GACXI,kBAAkBY,MAAQhB,EAAE,GAC5BQ,kBAAkBQ,MAAQhB,EAAE,GAC5BtB,SAASuC,UAAUT,kBAAmB,CAAC,WACvC9B,SAASuC,UAAUb,kBAAmB,CAAC,cAmBnDc,CAAUxC,UAEHA,UAOXiC,cAAe,WAEXQ,EAAEC,KAAKC,WAAW,2BAEHjD,KAAKkD,KAAK,CAAC,CACtBC,WAAY,yCACZC,KAAM,CACFC,GAAIjD,EAAEC,QAAQgD,GACdC,IAAKlD,EAAEC,QAAQiD,IACfC,iBAAkBnD,EAAEC,QAAQc,aAI3B,GACJQ,MAAK,SAAS6B,SACPC,IAAM,GAENA,IADArD,EAAEC,QAAQc,SACJjB,WAAWwD,QAAU,kCAAoCtD,EAAEC,QAAQc,SAErEf,EAAEC,QAAQsD,kBACJC,OAAOC,SAASC,KAEhB5D,WAAWwD,QAAU,gCAAkCF,IAAIO,IAIzEN,KAAO,OAASrD,EAAEC,QAAQgD,GAG1BO,OAAOC,SAASC,KAAOL,OAE1BO,QAAO,WACJjB,EAAEC,KAAKiB,YAAY,8BAEtBC,MAAK,SAASC,IACXP,OAAOQ,QAAQC,MAAM,sBAAwBF,GAAGG"}