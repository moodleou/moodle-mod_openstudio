{"version":3,"file":"export.min.js","sources":["../src/export.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * JavaScript to manage export feature.\n *\n * @package\n * @copyright 2017 The Open University\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * @module mod_openstudio/export\n */\ndefine([\n    'jquery',\n    'core/str',\n    'core/config',\n    'mod_openstudio/osdialogue'\n], function($, Str, SiteConfig, osDialogue) {\n    var t;\n    t = {\n\n        /**\n         * Export dialogue instance.\n         */\n        dialogue: null,\n\n        /**\n         * Module config. Passed from server side.\n         */\n        mconfig: null,\n\n        /**\n         * List out all of css selector used in export module.\n         */\n        CSS: {\n            DIALOGHEADER: '.openstudio-export-header',\n            BOUNDINGBOX: '.openstudio-export-dialog-container',\n            EXPORTBUTTON: '#osep-bottombutton-export',\n            EXPORTMESSAGE: '.openstudio-export-message',\n            SELECTALLPOST: 'button[name=\"openstudio-export-select-all\"]',\n            SELECTNONE: 'button[name=\"openstudio-export-select-none\"]',\n            EXPORTSELECTED: 'button[name=\"openstudio-export-selected\"]',\n            CHECKBOXS: '.openstudio-export-items input[type=\"checkbox\"][data-contentid]'\n        },\n\n        /**\n         * Initialize module.\n         *\n         * @param {JSON} options  The settings for module\n         * @method init\n         */\n        init: async function(options) {\n            t.mconfig = options;\n\n            t.dialogue = await t.createExportDialogue();\n\n            // Click event on export bottom button.\n            $(t.CSS.EXPORTBUTTON).on('click', function(e) {\n                e.preventDefault();\n                t.dialogue.show();\n            });\n\n            $(t.CSS.SELECTALLPOST).on('click', t.selectAll.bind(t));\n            $(t.CSS.SELECTNONE).on('click', t.selectNone.bind(t));\n            $(t.CSS.EXPORTSELECTED).on('click', t.exportSelected.bind(t));\n            $(t.CSS.CHECKBOXS).on('click', t.selectPost.bind(t));\n        },\n\n        /**\n         * Create export dialogue and some events on it.\n         *\n         * @method createExportDialogue\n         * @returns {Promise<Modal>}\n         */\n        createExportDialogue: async function() {\n            /**\n             * Set header for dialog.\n             *\n             * @param {Object} dialogue\n             * @method setHeader\n             */\n            function setHeader(dialogue) {\n                let headerString;\n                Str\n                    .get_string('exportdialogheader', 'mod_openstudio')\n                    .done(function(s) {\n                        headerString = s;\n                    })\n                    .always(function() {\n                        dialogue.setTitle('<span class=\"' + t.CSS.DIALOGHEADER.replace('.', '') +\n                            '\">' + headerString + '</span>');\n                    });\n            }\n\n            /**\n             * Set body for dialog.\n             *\n             * @param {Object} dialogue\n             * @method setBody\n             */\n            function setBody(dialogue) {\n                let bodyString;\n                let message;\n                Str\n                    .get_strings([\n                        {key: 'exportdialogcontent', component: 'mod_openstudio'},\n                        {key: 'export:emptycontent', component: 'mod_openstudio'}\n                    ])\n                    .done(function(s) {\n                        bodyString = s[0];\n                        message = s[1];\n                    })\n                    .always(function() {\n                        bodyString += '<div class=\"' + t.CSS.EXPORTMESSAGE.replace('.', '') + '\"></div>';\n                        dialogue.setBody(bodyString);\n\n                        $(t.CSS.EXPORTMESSAGE).text(message);\n                    });\n            }\n\n            /**\n             * Set body for dialog.\n             *\n             * @param {Object} dialogue\n             * @method setBody\n             */\n            function setFooter(dialogue) {\n                // Button [All content shown].\n                const exportAllBtnProperty = {\n                    name: 'exportall',\n                    classNames: 'openstudio-exportall-btn',\n                    events: {\n                        click: t.exportAll.bind(t)\n                    }\n                };\n\n                // Button [Selected posted].\n                const exportSelectedBtnProperty = {\n                    name: 'exportselected',\n                    classNames: 'openstudio-exportselected-btn',\n                    events: {\n                        click: function() {\n                            const contentIds = t.mconfig.contentids.join();\n                            if (contentIds) {\n                                t.redirectPostRequest({\n                                    url: SiteConfig.wwwroot + '/mod/openstudio/exportposts.php',\n                                    data: {\n                                        id: t.mconfig.id,\n                                        vid: t.mconfig.vid,\n                                        contentids: contentIds\n                                    }\n                                });\n                            } else {\n                                $(t.CSS.EXPORTMESSAGE).show();\n                            }\n                        }\n                    }\n                };\n\n                // Button [Cancel]\n                const cancelBtnProperty = {\n                    name: 'cancel',\n                    classNames: 'openstudio-cancelexport-btn',\n                    action: 'hide'\n                };\n\n                Str\n                    .get_strings([\n                        {key: 'exportall', component: 'mod_openstudio'},\n                        {key: 'exportselectedpost', component: 'mod_openstudio'},\n                        {key: 'modulejsdialogcancel', component: 'mod_openstudio'},\n                    ])\n                    .done(function(s) {\n                        exportAllBtnProperty.label = s[0];\n                        exportSelectedBtnProperty.label = s[1];\n                        cancelBtnProperty.label = s[2];\n                    })\n                    .always(function() {\n                        dialogue.addButton(exportAllBtnProperty, ['footer']);\n                        dialogue.addButton(exportSelectedBtnProperty, ['footer']);\n                        dialogue.addButton(cancelBtnProperty, ['footer']);\n                    });\n            }\n\n            const dialogue = await osDialogue.create({\n                isVerticallyCentered: true,\n                templateContext: {\n                    extraClasses: t.CSS.BOUNDINGBOX.replace('.', ''),\n                },\n            });\n\n            setHeader(dialogue);\n            setBody(dialogue);\n            setFooter(dialogue);\n\n            return dialogue;\n        },\n\n        /**\n         * Export all\n         * @method exportAll\n         */\n        exportAll: function() {\n            var contentids = t.mconfig.contentids.join();\n            if (contentids) {\n                t.redirectPostRequest({\n                    url: SiteConfig.wwwroot + '/mod/openstudio/export.php',\n                    data: {\n                        id: t.mconfig.id,\n                        contentids: contentids\n                    }\n                });\n            } else {\n                $(t.CSS.EXPORTMESSAGE).show();\n            }\n        },\n\n        /**\n         * Export selected posts\n         * @method exportSelected\n         */\n        exportSelected: function() {\n            var contentids = [];\n            $(t.CSS.CHECKBOXS).each(function() {\n                if ($(this).prop('checked') == true) {\n                    contentids.push($(this).data('contentid'));\n                }\n            });\n\n            if (contentids.length > 0) {\n                t.redirectPostRequest({\n                    url: SiteConfig.wwwroot + '/mod/openstudio/export.php',\n                    data: {\n                        id: t.mconfig.id,\n                        contentids: contentids.join()\n                    }\n                });\n            }\n        },\n\n        /**\n         * Redirect to url with post method.\n         * @method redirectPostRequest\n         * @param {JSON} options Request data\n         */\n        redirectPostRequest: function(options) {\n            var form = $('<form></form>');\n            form.attr({\n                'method': 'POST',\n                'action': options.url,\n                'style': 'display: none;'\n            });\n\n            $.each(options.data, function(key, value) {\n                var field = $('<input/>');\n                field.attr(\"type\", \"hidden\");\n                field.attr(\"name\", key);\n                field.attr(\"value\", value);\n\n                form.append(field);\n            });\n\n            $(form).appendTo('body').submit();\n        },\n\n        /**\n         * Select all posts\n         * @method selectAll\n         */\n        selectAll: function() {\n            $(t.CSS.CHECKBOXS).prop('checked', true);\n            $(t.CSS.SELECTALLPOST).addClass('disabled');\n            $(t.CSS.EXPORTSELECTED).removeClass('disabled');\n            $(t.CSS.SELECTNONE).removeClass('disabled');\n        },\n\n        /**\n         * Remove all selected posts\n         * @method selectNone\n         */\n        selectNone: function() {\n            $(t.CSS.CHECKBOXS).prop('checked', false);\n            $(t.CSS.SELECTALLPOST).removeClass('disabled');\n            $(t.CSS.EXPORTSELECTED).addClass('disabled');\n            $(t.CSS.SELECTNONE).addClass('disabled');\n        },\n\n        /**\n         * Select a post\n         * @method selectPost\n         */\n        selectPost: function() {\n            var uncheckBoxes = 0;\n            var boxquantity = 0;\n            $(t.CSS.CHECKBOXS).each(function() {\n                if ($(this).prop('checked') == false) {\n                    uncheckBoxes++;\n                }\n\n                boxquantity++;\n            });\n            $(t.CSS.SELECTALLPOST).toggleClass('disabled', uncheckBoxes == 0);\n            $(t.CSS.SELECTNONE).toggleClass('disabled', uncheckBoxes == boxquantity);\n            $(t.CSS.EXPORTSELECTED).toggleClass('disabled', uncheckBoxes == boxquantity);\n        }\n    };\n\n    return t;\n});"],"names":["define","$","Str","SiteConfig","osDialogue","t","dialogue","mconfig","CSS","DIALOGHEADER","BOUNDINGBOX","EXPORTBUTTON","EXPORTMESSAGE","SELECTALLPOST","SELECTNONE","EXPORTSELECTED","CHECKBOXS","init","async","options","createExportDialogue","on","e","preventDefault","show","selectAll","bind","selectNone","exportSelected","selectPost","create","isVerticallyCentered","templateContext","extraClasses","replace","headerString","get_string","done","s","always","setTitle","setHeader","bodyString","message","get_strings","key","component","setBody","text","exportAllBtnProperty","name","classNames","events","click","exportAll","exportSelectedBtnProperty","contentIds","contentids","join","redirectPostRequest","url","wwwroot","data","id","vid","cancelBtnProperty","action","label","addButton","setFooter","each","this","prop","push","length","form","attr","value","field","append","appendTo","submit","addClass","removeClass","uncheckBoxes","boxquantity","toggleClass"],"mappings":"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"}