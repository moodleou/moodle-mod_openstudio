{"version":3,"file":"export.min.js","sources":["../src/export.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * JavaScript to manage export feature.\n *\n * @package mod_openstudio\n * @copyright 2017 The Open University\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * @module mod_openstudio/export\n */\ndefine([\n    'jquery',\n    'core/yui',\n    'core/str',\n    'core/config',\n    'mod_openstudio/osdialogue'\n], function($, Y, Str, SiteConfig) {\n    var t;\n    t = {\n\n        /**\n         * M.core.dialog instance\n         */\n        dialogue: null,\n\n        /**\n         * Module config. Passed from server side.\n         */\n        mconfig: null,\n\n        /**\n         * List out all of css selector used in export module.\n         */\n        CSS: {\n            DIALOGHEADER: '.openstudio-export-header',\n            BOUNDINGBOX: '.openstudio-export-dialog-container',\n            EXPORTBUTTON: '#osep-bottombutton-export',\n            EXPORTMESSAGE: '.openstudio-export-message',\n            SELECTALLPOST: 'button[name=\"openstudio-export-select-all\"]',\n            SELECTNONE: 'button[name=\"openstudio-export-select-none\"]',\n            EXPORTSELECTED: 'button[name=\"openstudio-export-selected\"]',\n            CHECKBOXS: '.openstudio-export-items input[type=\"checkbox\"][data-contentid]'\n        },\n\n        /**\n         * Initialize module.\n         *\n         * @param {JSON} options  The settings for module\n         * @method init\n         */\n        init: function(options) {\n            t.mconfig = options;\n\n            Y.use('moodle-core-notification-dialogue', function() {\n                require(['mod_openstudio/osdialogue'], function(osDialogue){\n                    t.dialogue = t.createExportDialogue(osDialogue);\n                });\n            });\n\n            // Click event on export bottom button.\n            $(t.CSS.EXPORTBUTTON).on('click', function(e) {\n                e.preventDefault();\n                t.dialogue.show();\n            });\n\n            $(t.CSS.SELECTALLPOST).on('click', t.selectAll.bind(t));\n            $(t.CSS.SELECTNONE).on('click', t.selectNone.bind(t));\n            $(t.CSS.EXPORTSELECTED).on('click', t.exportSelected.bind(t));\n            $(t.CSS.CHECKBOXS).on('click', t.selectPost.bind(t));\n\n            $(window).resize(t.resize.bind(t));\n        },\n\n        /**\n         * Create export dialogue and some events on it.\n         *\n         * @return M.core.dialog instance\n         * @method createExportDialogue\n         * @return M.core.dialogue\n         */\n        createExportDialogue: function(osDialogue) {\n\n            /**\n             * Set header for dialog\n             * @method setHeader\n             */\n            function setHeader() {\n                var headerstring;\n                Str\n                    .get_string('exportdialogheader', 'mod_openstudio')\n                    .done(function(s) {\n                        headerstring = s;\n                    })\n                    .always(function() {\n                        dialogue.set('headerContent',\n                            '<span class=\"' + t.CSS.DIALOGHEADER.replace('.', '') +\n                            '\">' + headerstring + '</span>');\n                    });\n            }\n\n            /**\n             * Set body for dialog\n             * @method setBody\n             */\n            function setBody() {\n                var bodystring;\n                var message;\n                Str\n                    .get_strings([\n                        {key: 'exportdialogcontent', component: 'mod_openstudio'},\n                        {key: 'export:emptycontent', component: 'mod_openstudio'}\n                    ])\n                    .done(function(s) {\n                        bodystring = s[0];\n                        message = s[1];\n                    })\n                    .always(function() {\n                        bodystring += '<div class=\"' + t.CSS.EXPORTMESSAGE.replace('.', '') + '\"></div>';\n                        dialogue.set('bodyContent', bodystring);\n\n                        $(t.CSS.EXPORTMESSAGE).text(message);\n                    });\n            }\n\n            /**\n             * Set body for dialog\n             * @method setBody\n             */\n            function setFooter() {\n                // Button [All content shown]\n                var exportAllBtnProperty = {\n                    name: 'exportall',\n                    classNames: 'openstudio-exportall-btn',\n                    events: {\n                        click: t.exportAll.bind(t)\n                    }\n                };\n\n                // Button [Selected posted]\n                var exportSelectedBtnProperty = {\n                    name: 'exportselected',\n                    classNames: 'openstudio-exportselected-btn',\n                    events: {\n                        click: function() {\n                            var contentids = t.mconfig.contentids.join();\n                            if (contentids) {\n                                t.redirectPostRequest({\n                                    url: SiteConfig.wwwroot + '/mod/openstudio/exportposts.php',\n                                    data: {\n                                        id: t.mconfig.id,\n                                        vid: t.mconfig.vid,\n                                        contentids: contentids\n                                    }\n                                });\n                            } else {\n                                $(t.CSS.EXPORTMESSAGE).show();\n                            }\n                        }\n                    }\n                };\n\n                // Button [Cancel]\n                var cancelBtnProperty = {\n                    name: 'cancel',\n                    classNames: 'openstudio-cancelexport-btn',\n                    action: 'hide'\n                };\n\n                Str\n                    .get_strings([\n                        {key: 'exportall', component: 'mod_openstudio'},\n                        {key: 'exportselectedpost', component: 'mod_openstudio'},\n                        {key: 'modulejsdialogcancel', component: 'mod_openstudio'}\n                    ])\n                    .done(function(s) {\n                        exportAllBtnProperty.label = s[0];\n                        exportSelectedBtnProperty.label = s[1];\n                        cancelBtnProperty.label = s[2];\n                    })\n                    .always(function() {\n                        dialogue.addButton(exportAllBtnProperty, ['footer']);\n                        dialogue.addButton(exportSelectedBtnProperty, ['footer']);\n                        dialogue.addButton(cancelBtnProperty, ['footer']);\n                    });\n            }\n\n            var dialogue = new osDialogue({\n                closeButton: true,\n                visible: false,\n                centered: true,\n                responsive: true,\n                responsiveWidth: 767,\n                modal: true,\n                focusOnPreviousTargetAfterHide: true,\n                width: 521,\n                extraClasses: [t.CSS.BOUNDINGBOX.replace('.', '')]\n            });\n\n            setHeader();\n            setBody();\n            setFooter();\n\n            return dialogue;\n        },\n\n        /**\n         * Export all\n         * @method exportAll\n         */\n        exportAll: function() {\n            var contentids = t.mconfig.contentids.join();\n            if (contentids) {\n                t.redirectPostRequest({\n                    url: SiteConfig.wwwroot + '/mod/openstudio/export.php',\n                    data: {\n                        id: t.mconfig.id,\n                        contentids: contentids\n                    }\n                });\n            } else {\n                $(t.CSS.EXPORTMESSAGE).show();\n            }\n        },\n\n        /**\n         * Export selected posts\n         * @method exportSelected\n         */\n        exportSelected: function() {\n            var contentids = [];\n            $(t.CSS.CHECKBOXS).each(function() {\n                if ($(this).prop('checked') == true) {\n                    contentids.push($(this).data('contentid'));\n                }\n            });\n\n            if (contentids.length > 0) {\n                t.redirectPostRequest({\n                    url: SiteConfig.wwwroot + '/mod/openstudio/export.php',\n                    data: {\n                        id: t.mconfig.id,\n                        contentids: contentids.join()\n                    }\n                });\n            }\n        },\n\n        /**\n         * Resize and update dialogue position.\n         * @method resize\n         */\n        resize: function() {\n            if (t.dialogue.get('visible')) {\n                if (Y.one('body').get('winWidth') <= 767) {\n                    t.dialogue.makeResponsive();\n                } else {\n                    t.dialogue.centerDialogue();\n                }\n            }\n        },\n\n        /**\n         * Redirect to url with post method.\n         * @method redirectPostRequest\n         * @param {JSON} options Request data\n         */\n        redirectPostRequest: function(options) {\n            var form = $('<form></form>');\n            form.attr({\n                'method': 'POST',\n                'action': options.url,\n                'style': 'display: none;'\n            });\n\n            $.each(options.data, function(key, value) {\n                var field = $('<input/>');\n                field.attr(\"type\", \"hidden\");\n                field.attr(\"name\", key);\n                field.attr(\"value\", value);\n\n                form.append(field);\n            });\n\n            $(form).appendTo('body').submit();\n        },\n\n        /**\n         * Select all posts\n         * @method selectAll\n         */\n        selectAll: function() {\n            $(t.CSS.CHECKBOXS).prop('checked', true);\n            $(t.CSS.SELECTALLPOST).addClass('disabled');\n            $(t.CSS.EXPORTSELECTED).removeClass('disabled');\n            $(t.CSS.SELECTNONE).removeClass('disabled');\n        },\n\n        /**\n         * Remove all selected posts\n         * @method selectNone\n         */\n        selectNone: function() {\n            $(t.CSS.CHECKBOXS).prop('checked', false);\n            $(t.CSS.SELECTALLPOST).removeClass('disabled');\n            $(t.CSS.EXPORTSELECTED).addClass('disabled');\n            $(t.CSS.SELECTNONE).addClass('disabled');\n        },\n\n        /**\n         * Select a post\n         * @method selectPost\n         */\n        selectPost: function() {\n            var uncheckBoxes = 0;\n            var boxquantity = 0;\n            $(t.CSS.CHECKBOXS).each(function() {\n                if ($(this).prop('checked') == false) {\n                    uncheckBoxes++;\n                }\n\n                boxquantity++;\n            });\n            $(t.CSS.SELECTALLPOST).toggleClass('disabled', uncheckBoxes == 0);\n            $(t.CSS.SELECTNONE).toggleClass('disabled', uncheckBoxes == boxquantity);\n            $(t.CSS.EXPORTSELECTED).toggleClass('disabled', uncheckBoxes == boxquantity);\n        }\n    };\n\n    return t;\n});"],"names":["define","$","Y","Str","SiteConfig","t","dialogue","mconfig","CSS","DIALOGHEADER","BOUNDINGBOX","EXPORTBUTTON","EXPORTMESSAGE","SELECTALLPOST","SELECTNONE","EXPORTSELECTED","CHECKBOXS","init","options","use","require","osDialogue","createExportDialogue","on","e","preventDefault","show","selectAll","bind","selectNone","exportSelected","selectPost","window","resize","headerstring","bodystring","message","exportAllBtnProperty","exportSelectedBtnProperty","cancelBtnProperty","closeButton","visible","centered","responsive","responsiveWidth","modal","focusOnPreviousTargetAfterHide","width","extraClasses","replace","get_string","done","s","always","set","get_strings","key","component","text","name","classNames","events","click","exportAll","contentids","join","redirectPostRequest","url","wwwroot","data","id","vid","action","label","addButton","each","this","prop","push","length","get","one","makeResponsive","centerDialogue","form","attr","value","field","append","appendTo","submit","addClass","removeClass","uncheckBoxes","boxquantity","toggleClass"],"mappings":";;;;;;;AA0BAA,+BAAO,CACH,SACA,WACA,WACA,cACA,8BACD,SAASC,EAAGC,EAAGC,IAAKC,gBACfC,SACJA,EAAI,CAKAC,SAAU,KAKVC,QAAS,KAKTC,IAAK,CACDC,aAAc,4BACdC,YAAa,sCACbC,aAAc,4BACdC,cAAe,6BACfC,cAAe,8CACfC,WAAY,+CACZC,eAAgB,4CAChBC,UAAW,mEASfC,KAAM,SAASC,SACXb,EAAEE,QAAUW,QAEZhB,EAAEiB,IAAI,qCAAqC,WACvCC,QAAQ,CAAC,8BAA8B,SAASC,YAC5ChB,EAAEC,SAAWD,EAAEiB,qBAAqBD,kBAK5CpB,EAAEI,EAAEG,IAAIG,cAAcY,GAAG,SAAS,SAASC,GACvCA,EAAEC,iBACFpB,EAAEC,SAASoB,UAGfzB,EAAEI,EAAEG,IAAIK,eAAeU,GAAG,QAASlB,EAAEsB,UAAUC,KAAKvB,IACpDJ,EAAEI,EAAEG,IAAIM,YAAYS,GAAG,QAASlB,EAAEwB,WAAWD,KAAKvB,IAClDJ,EAAEI,EAAEG,IAAIO,gBAAgBQ,GAAG,QAASlB,EAAEyB,eAAeF,KAAKvB,IAC1DJ,EAAEI,EAAEG,IAAIQ,WAAWO,GAAG,QAASlB,EAAE0B,WAAWH,KAAKvB,IAEjDJ,EAAE+B,QAAQC,OAAO5B,EAAE4B,OAAOL,KAAKvB,KAUnCiB,qBAAsB,SAASD,gBAOnBa,aAkBAC,WACAC,QAwBAC,qBASAC,0BAuBAC,kBAwBJjC,SAAW,IAAIe,WAAW,CAC1BmB,aAAa,EACbC,SAAS,EACTC,UAAU,EACVC,YAAY,EACZC,gBAAiB,IACjBC,OAAO,EACPC,gCAAgC,EAChCC,MAAO,IACPC,aAAc,CAAC3C,EAAEG,IAAIE,YAAYuC,QAAQ,IAAK,cA3G9C9C,IACK+C,WAAW,qBAAsB,kBACjCC,MAAK,SAASC,GACXlB,aAAekB,KAElBC,QAAO,WACJ/C,SAASgD,IAAI,gBACT,gBAAkBjD,EAAEG,IAAIC,aAAawC,QAAQ,IAAK,IAClD,KAAOf,aAAe,cAWlC/B,IACKoD,YAAY,CACT,CAACC,IAAK,sBAAuBC,UAAW,kBACxC,CAACD,IAAK,sBAAuBC,UAAW,oBAE3CN,MAAK,SAASC,GACXjB,WAAaiB,EAAE,GACfhB,QAAUgB,EAAE,MAEfC,QAAO,WACJlB,YAAc,eAAiB9B,EAAEG,IAAII,cAAcqC,QAAQ,IAAK,IAAM,WACtE3C,SAASgD,IAAI,cAAenB,YAE5BlC,EAAEI,EAAEG,IAAII,eAAe8C,KAAKtB,YAUhCC,qBAAuB,CACvBsB,KAAM,YACNC,WAAY,2BACZC,OAAQ,CACJC,MAAOzD,EAAE0D,UAAUnC,KAAKvB,KAK5BiC,0BAA4B,CAC5BqB,KAAM,iBACNC,WAAY,gCACZC,OAAQ,CACJC,MAAO,eACCE,WAAa3D,EAAEE,QAAQyD,WAAWC,OAClCD,WACA3D,EAAE6D,oBAAoB,CAClBC,IAAK/D,WAAWgE,QAAU,kCAC1BC,KAAM,CACFC,GAAIjE,EAAEE,QAAQ+D,GACdC,IAAKlE,EAAEE,QAAQgE,IACfP,WAAYA,cAIpB/D,EAAEI,EAAEG,IAAII,eAAec,UAOnCa,kBAAoB,CACpBoB,KAAM,SACNC,WAAY,8BACZY,OAAQ,QAGZrE,IACKoD,YAAY,CACT,CAACC,IAAK,YAAaC,UAAW,kBAC9B,CAACD,IAAK,qBAAsBC,UAAW,kBACvC,CAACD,IAAK,uBAAwBC,UAAW,oBAE5CN,MAAK,SAASC,GACXf,qBAAqBoC,MAAQrB,EAAE,GAC/Bd,0BAA0BmC,MAAQrB,EAAE,GACpCb,kBAAkBkC,MAAQrB,EAAE,MAE/BC,QAAO,WACJ/C,SAASoE,UAAUrC,qBAAsB,CAAC,WAC1C/B,SAASoE,UAAUpC,0BAA2B,CAAC,WAC/ChC,SAASoE,UAAUnC,kBAAmB,CAAC,cAoB5CjC,UAOXyD,UAAW,eACHC,WAAa3D,EAAEE,QAAQyD,WAAWC,OAClCD,WACA3D,EAAE6D,oBAAoB,CAClBC,IAAK/D,WAAWgE,QAAU,6BAC1BC,KAAM,CACFC,GAAIjE,EAAEE,QAAQ+D,GACdN,WAAYA,cAIpB/D,EAAEI,EAAEG,IAAII,eAAec,QAQ/BI,eAAgB,eACRkC,WAAa,GACjB/D,EAAEI,EAAEG,IAAIQ,WAAW2D,MAAK,WACW,GAA3B1E,EAAE2E,MAAMC,KAAK,YACbb,WAAWc,KAAK7E,EAAE2E,MAAMP,KAAK,iBAIjCL,WAAWe,OAAS,GACpB1E,EAAE6D,oBAAoB,CAClBC,IAAK/D,WAAWgE,QAAU,6BAC1BC,KAAM,CACFC,GAAIjE,EAAEE,QAAQ+D,GACdN,WAAYA,WAAWC,WAUvChC,OAAQ,WACA5B,EAAEC,SAAS0E,IAAI,aACX9E,EAAE+E,IAAI,QAAQD,IAAI,aAAe,IACjC3E,EAAEC,SAAS4E,iBAEX7E,EAAEC,SAAS6E,mBAUvBjB,oBAAqB,SAAShD,aACtBkE,KAAOnF,EAAE,iBACbmF,KAAKC,KAAK,QACI,cACAnE,QAAQiD,UACT,mBAGblE,EAAE0E,KAAKzD,QAAQmD,MAAM,SAASb,IAAK8B,WAC3BC,MAAQtF,EAAE,YACdsF,MAAMF,KAAK,OAAQ,UACnBE,MAAMF,KAAK,OAAQ7B,KACnB+B,MAAMF,KAAK,QAASC,OAEpBF,KAAKI,OAAOD,UAGhBtF,EAAEmF,MAAMK,SAAS,QAAQC,UAO7B/D,UAAW,WACP1B,EAAEI,EAAEG,IAAIQ,WAAW6D,KAAK,WAAW,GACnC5E,EAAEI,EAAEG,IAAIK,eAAe8E,SAAS,YAChC1F,EAAEI,EAAEG,IAAIO,gBAAgB6E,YAAY,YACpC3F,EAAEI,EAAEG,IAAIM,YAAY8E,YAAY,aAOpC/D,WAAY,WACR5B,EAAEI,EAAEG,IAAIQ,WAAW6D,KAAK,WAAW,GACnC5E,EAAEI,EAAEG,IAAIK,eAAe+E,YAAY,YACnC3F,EAAEI,EAAEG,IAAIO,gBAAgB4E,SAAS,YACjC1F,EAAEI,EAAEG,IAAIM,YAAY6E,SAAS,aAOjC5D,WAAY,eACJ8D,aAAe,EACfC,YAAc,EAClB7F,EAAEI,EAAEG,IAAIQ,WAAW2D,MAAK,WACW,GAA3B1E,EAAE2E,MAAMC,KAAK,YACbgB,eAGJC,iBAEJ7F,EAAEI,EAAEG,IAAIK,eAAekF,YAAY,WAA4B,GAAhBF,cAC/C5F,EAAEI,EAAEG,IAAIM,YAAYiF,YAAY,WAAYF,cAAgBC,aAC5D7F,EAAEI,EAAEG,IAAIO,gBAAgBgF,YAAY,WAAYF,cAAgBC"}