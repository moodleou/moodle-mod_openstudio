{"version":3,"file":"expand_collapse_handler.min.js","sources":["../src/expand_collapse_handler.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * JavaScript to handle expand/collapse.\n *\n * @module mod_openstudio/expand_collapse_handler\n * @copyright 2024 The Open University\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Pending from 'core/pending';\nimport * as Repository from 'core_user/repository';\nimport Notification from 'core/notification';\n\nlet cmid = 0;\nlet activitiesID = [];\nlet expanded = {};\nlet userPreference = '';\n\n/**\n * Initialise function.\n *\n */\nexport const init = () => {\n    initActivitiesID();\n    initClickEvent();\n    updateExpandCollapseAll();\n    cmid = document.querySelector('.openstudio-container').dataset.cmid;\n    userPreference = 'mod_openstudio_expanded_' + cmid;\n    Repository.getUserPreference(userPreference)\n        .then((response) => {\n            if (response) {\n                expanded[cmid] = JSON.parse(response);\n            } else {\n                expanded[cmid] = {};\n            }\n        }).catch(Notification.exception);\n};\n\n/**\n * Init list activity id.\n *\n */\nconst initActivitiesID = () => {\n    document.querySelectorAll('h2.openstudio-activity-title').forEach((activity) => {\n        activitiesID.push(activity.dataset.id);\n    });\n};\n\n/**\n * Init click event for expand/collapse link/button.\n *\n */\nconst initClickEvent = () => {\n    document.body.addEventListener('click', (event) => {\n        const target = event.target;\n        if (target.closest('a.openstudio-expand')) {\n            event.preventDefault();\n            expandActivity(target.closest('a.openstudio-expand'), false);\n        } else if (target.closest('a.openstudio-collapse')) {\n            event.preventDefault();\n            collapseActivity(target.closest('a.openstudio-collapse'), false);\n        } else if (target.closest('#openstudio-expandall')) {\n            event.preventDefault();\n            expandAll(target.closest('#openstudio-expandall'), true);\n        } else if (target.closest('#openstudio-collapseall')) {\n            event.preventDefault();\n            expandAll(target.closest('#openstudio-collapseall'),false);\n        }\n    });\n};\n\n/**\n * Handler for the expand/collapse all.\n *\n * @param {HTMLElement} button Expand/ Collapse button\n * @param {boolean} expand True if you want to expand all, and vice versa\n */\nconst expandAll = (button, expand) => {\n    const pendingPromise = new Pending(\"mod_openstudio/expandall\");\n    const type = expand ? 'expand' : 'collapse';\n    const all = document.querySelectorAll('a.openstudio-' + type);\n    all.forEach((link) => {\n        if (expand) {\n            expandActivity(link, true);\n        } else {\n            collapseActivity(link, true);\n        }\n    });\n    updateExpandCollapseLink(button, false, true);\n    storeExpanded(expand, null);\n    pendingPromise.resolve();\n};\n\n/**\n * Handle expand activity.\n *\n * @param {HTMLElement} link Expand link\n * @param {Boolean} preventFocus Prevent focus state\n */\nconst expandActivity = (link, preventFocus) => {\n    const elid = 'openstudio_grid_' + link.dataset.activity;\n    const activity = document.getElementById(elid);\n    if (activity.classList.contains('openstudio-expanded')) {\n        return;\n    }\n    const pendingPromise = new Pending(\"mod_openstudio/expand\");\n    const currentGrid = window.isotope[elid];\n    activity.setAttribute('aria-expanded', 'true');\n    // Display activity items before Isotope rearrange.\n    activity.style.opacity = '0';\n    activity.classList.add('openstudio-expanded');\n\n    setTimeout(() => {\n        currentGrid.layout();\n        activity.style.opacity = '1';\n    }, 50);\n    updateExpandCollapseLink(link, preventFocus, false);\n    updateExpandCollapseAll();\n    if (!preventFocus) {\n        storeExpanded(true, link.dataset.activity);\n    }\n    pendingPromise.resolve();\n};\n\n/**\n * Handle collapse activity.\n *\n * @param {HTMLElement} link Collapse link\n * @param {Boolean} preventFocus Prevent focus state\n */\nconst collapseActivity = (link, preventFocus) => {\n    const elid = 'openstudio_grid_' + link.dataset.activity;\n    const activity = document.getElementById(elid);\n    if (!activity.classList.contains('openstudio-expanded')) {\n        return;\n    }\n    const pendingPromise = new Pending(\"mod_openstudio/collapse\");\n    activity.setAttribute('aria-expanded', 'false');\n    activity.style.height = '0';\n    activity.style.opacity = '0';\n    setTimeout(() => {\n        activity.classList.remove('openstudio-expanded');\n    }, 500);\n    updateExpandCollapseLink(link, preventFocus, false);\n    updateExpandCollapseAll();\n    if (!preventFocus) {\n        storeExpanded(false, link.dataset.activity);\n    }\n    pendingPromise.resolve();\n};\n\n\n/**\n * Switch expand collapse link/button after clicking.\n *\n * @param {HTMLElement} link Expand/Collapse link\n * @param {Boolean} preventFocus Prevent focus after clicking\n * @param {Boolean} preventToggle Prevent toggle class.\n */\nconst updateExpandCollapseLink = (link, preventFocus, preventToggle) => {\n    if(!preventToggle) {\n        link.parentNode.classList.toggle('expanded');\n    }\n    const sibling = link.nextElementSibling ?? link.previousElementSibling;\n    if (!preventFocus) {\n        sibling.focus();\n    }\n};\n\n/**\n * Update the text of the expand/collapse all link, based\n * on whether any activities are open.\n *\n */\nconst updateExpandCollapseAll = () => {\n    const links = document.querySelectorAll('div.openstudio-expandcollapse.expanded');\n    const expandall = document.querySelector('div.openstudio-expandall');\n    if (expandall) {\n        if (links.length === 0) {\n            expandall.classList.remove('expanded');\n        } else {\n            expandall.classList.add('expanded');\n        }\n    }\n};\n\n/**\n * User preference called to store expanded state.\n *\n * @param {Boolean} expand True for expanded\n * @param {number|null} activityID Activity id or null to expand all\n */\nconst storeExpanded = async (expand, activityID) => {\n    const pendingPromise = new Pending(\"mod_openstudio/storeexpanded\");\n    const all = (activityID === null);\n    if (all) {\n        activitiesID.forEach(id => {\n            expanded[cmid][id] = expand;\n        });\n    } else {\n        expanded[cmid][activityID] = expand;\n    }\n    await Repository.setUserPreference(userPreference, JSON.stringify(expanded[cmid]));\n    pendingPromise.resolve();\n};\n"],"names":["cmid","activitiesID","expanded","userPreference","initActivitiesID","initClickEvent","updateExpandCollapseAll","document","querySelector","dataset","Repository","getUserPreference","then","response","JSON","parse","catch","Notification","exception","querySelectorAll","forEach","activity","push","id","body","addEventListener","event","target","closest","preventDefault","expandActivity","collapseActivity","expandAll","button","expand","pendingPromise","Pending","type","link","updateExpandCollapseLink","storeExpanded","resolve","preventFocus","elid","getElementById","classList","contains","currentGrid","window","isotope","setAttribute","style","opacity","add","setTimeout","layout","height","remove","preventToggle","parentNode","toggle","sibling","nextElementSibling","previousElementSibling","focus","links","expandall","length","async","activityID","setUserPreference","stringify"],"mappings":"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"}