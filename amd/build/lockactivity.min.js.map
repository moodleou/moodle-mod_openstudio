{"version":3,"file":"lockactivity.min.js","sources":["../src/lockactivity.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * JavaScript to manage lock activity content.\n *\n * @package mod_openstudio\n * @copyright 2017 The Open University\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * @module mod_openstudio/lockactivity\n */\ndefine([\n    'jquery',\n    'core/ajax',\n    'core/str'\n], function($, Ajax, Str) {\n    var t;\n    t = {\n\n        /**\n         * Module config. Passed from server side.\n         * {\n         *     cmid: int\n         */\n        mconfig: null,\n\n        /**\n         * List out all of css selector used in lock module.\n         */\n        CSS: {\n            ACTIVITY_UNLOCK_ICON: 'span[name=\"activitylockbutton\"]',\n            ACTIVITY_UNLOCK_BUTTON: '.openstudio-unlock-ok-btn'\n        },\n\n        /**\n         * Initialize module.\n         *\n         * @method init\n         * @param {JSON} options  The settings for lock feature.\n         */\n        init: function(options) {\n\n            t.mconfig = options;\n\n            // Create unlock activity dialog.\n            Y.use('moodle-core-notification-dialogue', function() {\n                require(['mod_openstudio/osdialogue'], function(osDialogue) {\n                    t.dialogue = t.createUnlockActivityDialogue(osDialogue);\n                });\n            });\n\n            // Activity lock button.\n            $(t.CSS.ACTIVITY_UNLOCK_ICON).on('click', function() {\n                if (t.dialogue) {\n                    $(t.CSS.ACTIVITY_UNLOCK_BUTTON)\n                        .attr('data-level3id', $(this).attr('data-level3id'))\n                        .attr('data-vuid', $(this).attr('data-vuid'));\n                    t.dialogue.show();\n                }\n            });\n\n            $('body').delegate(t.CSS.ACTIVITY_UNLOCK_BUTTON, 'click', t.unlockActivityContent);\n\n            // Responsive.\n            $(window).resize(t.resize.bind(t));\n        },\n\n        /**\n         * Unlock activity content then reload the page.\n         * @method unlockActivityContent\n         */\n        unlockActivityContent: function() {\n            var level3id = $(this).attr('data-level3id');\n            var vuid = $(this).attr('data-vuid');\n\n            M.util.js_pending('openstudioUnlockActivity');\n\n            var promises = Ajax.call([{\n                methodname: 'mod_openstudio_external_unlock_override_activity',\n                args: {\n                    cmid: t.mconfig.cmid,\n                    level3id: level3id,\n                    vuid: vuid\n                }\n            }]);\n\n            promises[0]\n                .done(function() {\n                    window.location.reload();\n                })\n                .always(function() {\n                    M.util.js_complete('openstudioUnlockActivity');\n                })\n                .fail(function(ex) {\n                    window.console.error('Log request failed ' + ex.message);\n                });\n        },\n\n        /**\n         * Create unlock activity dialogue and some events on it.\n         *\n         * @param {object} osDialogue object\n         * @return {object} OSDialogue instance\n         * @method createUnlockActivityDialogue\n         */\n        createUnlockActivityDialogue: function(osDialogue) {\n            /**\n             * Set header for dialog\n             * @method setHeader\n             */\n            function setHeader() {\n                Str\n                    .get_string('contentactionunlockname', 'mod_openstudio')\n                    .done(function(s) {\n                        dialogue.set('headerContent', '<span>' + s + '</span>');\n                    });\n            }\n\n            /**\n             * Set body for dialog\n             * @method setBody\n             */\n            function setBody() {\n                Str\n                    .get_string('modulejsdialogcontentunlock', 'mod_openstudio')\n                    .done(function(s) {\n                        dialogue.set('bodyContent', s);\n                    });\n            }\n\n            /**\n             * Set body for dialog\n             * @method setBody\n             */\n            function setFooter() {\n                // Button [Cancel]\n                var cancelBtnProperty = {\n                    name: 'cancel',\n                    action: 'hide'\n                };\n\n                // Button [Unlock]\n                var unlockBtnProperty = {\n                    name: 'lock',\n                    classNames: t.CSS.ACTIVITY_UNLOCK_BUTTON.replace('.', '')\n                };\n\n                Str\n                    .get_strings([\n                        {key: 'modulejsdialogcancel', component: 'mod_openstudio'},\n                        {key: 'contentactionunlockname', component: 'mod_openstudio'}\n                    ])\n                    .done(function(s) {\n                        cancelBtnProperty.label = s[0];\n                        unlockBtnProperty.label = s[1];\n                        dialogue.addButton(unlockBtnProperty, ['footer']);\n                        dialogue.addButton(cancelBtnProperty, ['footer']);\n                    });\n            }\n\n            var dialogue = new osDialogue({\n                closeButton: true,\n                visible: false,\n                centered: true,\n                modal: true,\n                responsive: true,\n                width: 640,\n                responsiveWidth: 767,\n                focusOnPreviousTargetAfterHide: true\n            });\n\n            setHeader();\n            setBody();\n            setFooter();\n\n            return dialogue;\n        },\n\n        /**\n         * Resize and update dialogue position.\n         * @method resize\n         */\n        resize: function() {\n            if (!t.dialogue) {\n                return;\n            }\n\n            if (t.dialogue.get('visible')) {\n                if (Y.one('body').get('winWidth') <= t.dialogue.get('responsiveWidth')) {\n                    t.dialogue.makeResponsive();\n                } else {\n                    t.dialogue.centerDialogue();\n                }\n            }\n        }\n    };\n\n    return t;\n});\n"],"names":["define","$","Ajax","Str","t","mconfig","CSS","ACTIVITY_UNLOCK_ICON","ACTIVITY_UNLOCK_BUTTON","init","options","Y","use","require","osDialogue","dialogue","createUnlockActivityDialogue","on","attr","this","show","delegate","unlockActivityContent","window","resize","bind","level3id","vuid","M","util","js_pending","call","methodname","args","cmid","done","location","reload","always","js_complete","fail","ex","console","error","message","cancelBtnProperty","unlockBtnProperty","closeButton","visible","centered","modal","responsive","width","responsiveWidth","focusOnPreviousTargetAfterHide","get_string","s","set","name","action","classNames","replace","get_strings","key","component","label","addButton","get","one","makeResponsive","centerDialogue"],"mappings":";;;;;;;AA0BAA,qCAAO,CACH,SACA,YACA,aACD,SAASC,EAAGC,KAAMC,SACbC,SACJA,EAAI,CAOAC,QAAS,KAKTC,IAAK,CACDC,qBAAsB,kCACtBC,uBAAwB,6BAS5BC,KAAM,SAASC,SAEXN,EAAEC,QAAUK,QAGZC,EAAEC,IAAI,qCAAqC,WACvCC,QAAQ,CAAC,8BAA8B,SAASC,YAC5CV,EAAEW,SAAWX,EAAEY,6BAA6BF,kBAKpDb,EAAEG,EAAEE,IAAIC,sBAAsBU,GAAG,SAAS,WAClCb,EAAEW,WACFd,EAAEG,EAAEE,IAAIE,wBACHU,KAAK,gBAAiBjB,EAAEkB,MAAMD,KAAK,kBACnCA,KAAK,YAAajB,EAAEkB,MAAMD,KAAK,cACpCd,EAAEW,SAASK,WAInBnB,EAAE,QAAQoB,SAASjB,EAAEE,IAAIE,uBAAwB,QAASJ,EAAEkB,uBAG5DrB,EAAEsB,QAAQC,OAAOpB,EAAEoB,OAAOC,KAAKrB,KAOnCkB,sBAAuB,eACfI,SAAWzB,EAAEkB,MAAMD,KAAK,iBACxBS,KAAO1B,EAAEkB,MAAMD,KAAK,aAExBU,EAAEC,KAAKC,WAAW,4BAEH5B,KAAK6B,KAAK,CAAC,CACtBC,WAAY,mDACZC,KAAM,CACFC,KAAM9B,EAAEC,QAAQ6B,KAChBR,SAAUA,SACVC,KAAMA,SAIL,GACJQ,MAAK,WACFZ,OAAOa,SAASC,YAEnBC,QAAO,WACJV,EAAEC,KAAKU,YAAY,+BAEtBC,MAAK,SAASC,IACXlB,OAAOmB,QAAQC,MAAM,sBAAwBF,GAAGG,aAW5D5B,6BAA8B,SAASF,gBA+B3B+B,kBAMAC,kBAkBJ/B,SAAW,IAAID,WAAW,CAC1BiC,aAAa,EACbC,SAAS,EACTC,UAAU,EACVC,OAAO,EACPC,YAAY,EACZC,MAAO,IACPC,gBAAiB,IACjBC,gCAAgC,WAzDhCnD,IACKoD,WAAW,0BAA2B,kBACtCpB,MAAK,SAASqB,GACXzC,SAAS0C,IAAI,gBAAiB,SAAWD,EAAI,cASrDrD,IACKoD,WAAW,8BAA+B,kBAC1CpB,MAAK,SAASqB,GACXzC,SAAS0C,IAAI,cAAeD,MAUhCX,kBAAoB,CACpBa,KAAM,SACNC,OAAQ,QAIRb,kBAAoB,CACpBY,KAAM,OACNE,WAAYxD,EAAEE,IAAIE,uBAAuBqD,QAAQ,IAAK,KAG1D1D,IACK2D,YAAY,CACT,CAACC,IAAK,uBAAwBC,UAAW,kBACzC,CAACD,IAAK,0BAA2BC,UAAW,oBAE/C7B,MAAK,SAASqB,GACXX,kBAAkBoB,MAAQT,EAAE,GAC5BV,kBAAkBmB,MAAQT,EAAE,GAC5BzC,SAASmD,UAAUpB,kBAAmB,CAAC,WACvC/B,SAASmD,UAAUrB,kBAAmB,CAAC,cAmB5C9B,UAOXS,OAAQ,WACCpB,EAAEW,UAIHX,EAAEW,SAASoD,IAAI,aACXxD,EAAEyD,IAAI,QAAQD,IAAI,aAAe/D,EAAEW,SAASoD,IAAI,mBAChD/D,EAAEW,SAASsD,iBAEXjE,EAAEW,SAASuD"}