{"version":3,"file":"lockactivity.min.js","sources":["../src/lockactivity.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * JavaScript to manage lock activity content.\n *\n * @package\n * @copyright 2017 The Open University\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * @module mod_openstudio/lockactivity\n */\ndefine([\n    'jquery',\n    'core/ajax',\n    'core/str',\n    'mod_openstudio/osdialogue',\n], function($, Ajax, Str, osDialogue) {\n    var t;\n    t = {\n\n        /**\n         * Module config. Passed from server side.\n         * {\n         *     cmid: int\n         */\n        mconfig: null,\n\n        /**\n         * List out all of css selector used in lock module.\n         */\n        CSS: {\n            ACTIVITY_UNLOCK_ICON: 'span[name=\"activitylockbutton\"]',\n            ACTIVITY_UNLOCK_BUTTON: '.openstudio-unlock-ok-btn'\n        },\n\n        /**\n         * Unlock activity dialogue instance.\n         */\n        dialogue: null,\n\n        /**\n         * Initialize module.\n         *\n         * @method init\n         * @param {JSON} options  The settings for lock feature.\n         */\n        init: async function(options) {\n\n            t.mconfig = options;\n\n            // Create unlock activity dialog.\n            t.dialogue = await t.createUnlockActivityDialogue();\n\n            // Activity lock button.\n            $(t.CSS.ACTIVITY_UNLOCK_ICON).on('click', function() {\n                if (t.dialogue) {\n                    $(t.CSS.ACTIVITY_UNLOCK_BUTTON)\n                        .attr('data-level3id', $(this).attr('data-level3id'))\n                        .attr('data-vuid', $(this).attr('data-vuid'));\n                    t.dialogue.show();\n                }\n            });\n\n            $('body').delegate(t.CSS.ACTIVITY_UNLOCK_BUTTON, 'click', t.unlockActivityContent);\n        },\n\n        /**\n         * Unlock activity content then reload the page.\n         * @method unlockActivityContent\n         */\n        unlockActivityContent: function() {\n            var level3id = $(this).attr('data-level3id');\n            var vuid = $(this).attr('data-vuid');\n\n            M.util.js_pending('openstudioUnlockActivity');\n\n            var promises = Ajax.call([{\n                methodname: 'mod_openstudio_external_unlock_override_activity',\n                args: {\n                    cmid: t.mconfig.cmid,\n                    level3id: level3id,\n                    vuid: vuid\n                }\n            }]);\n\n            promises[0]\n                .done(function() {\n                    window.location.reload();\n                })\n                .always(function() {\n                    M.util.js_complete('openstudioUnlockActivity');\n                })\n                .fail(function(ex) {\n                    window.console.error('Log request failed ' + ex.message);\n                });\n        },\n\n        /**\n         * Create unlock activity dialogue and some events on it.\n         *\n         * @returns {Promise<Modal>}\n         * @method createUnlockActivityDialogue\n         */\n        createUnlockActivityDialogue: async function() {\n            /**\n             * Set header for dialog.\n             *\n             * @param {Object} dialogue\n             * @method setHeader\n             */\n            function setHeader(dialogue) {\n                Str\n                    .get_string('contentactionunlockname', 'mod_openstudio')\n                    .done(function(s) {\n                        dialogue.setTitle('<span>' + s + '</span>');\n                    });\n            }\n\n            /**\n             * Set body for dialog.\n             *\n             * @param {Object} dialogue\n             * @method setBody\n             */\n            function setBody(dialogue) {\n                Str\n                    .get_string('modulejsdialogcontentunlock', 'mod_openstudio')\n                    .done(function(s) {\n                        dialogue.setBody(s);\n                    });\n            }\n\n            /**\n             * Set footer for dialog.\n             *\n             * @param {Object} dialogue\n             * @method setFooter\n             */\n            function setFooter(dialogue) {\n                // Button [Cancel].\n                const cancelBtnProperty = {\n                    name: 'cancel',\n                    action: 'hide',\n                };\n\n                // Button [Unlock].\n                const unlockBtnProperty = {\n                    name: 'lock',\n                    classNames: t.CSS.ACTIVITY_UNLOCK_BUTTON.replace('.', ''),\n                };\n\n                Str\n                    .get_strings([\n                        {key: 'modulejsdialogcancel', component: 'mod_openstudio'},\n                        {key: 'contentactionunlockname', component: 'mod_openstudio'},\n                    ])\n                    .done(function(s) {\n                        cancelBtnProperty.label = s[0];\n                        unlockBtnProperty.label = s[1];\n                        dialogue.addButton(unlockBtnProperty, ['footer']);\n                        dialogue.addButton(cancelBtnProperty, ['footer']);\n                    });\n            }\n\n            const dialogue = await osDialogue.create({\n                isVerticallyCentered: true,\n            });\n\n            setHeader(dialogue);\n            setBody(dialogue);\n            setFooter(dialogue);\n\n            return dialogue;\n        },\n    };\n\n    return t;\n});\n"],"names":["define","$","Ajax","Str","osDialogue","t","mconfig","CSS","ACTIVITY_UNLOCK_ICON","ACTIVITY_UNLOCK_BUTTON","dialogue","init","async","options","createUnlockActivityDialogue","on","attr","this","show","delegate","unlockActivityContent","level3id","vuid","M","util","js_pending","call","methodname","args","cmid","done","window","location","reload","always","js_complete","fail","ex","console","error","message","create","isVerticallyCentered","get_string","s","setTitle","setHeader","setBody","cancelBtnProperty","name","action","unlockBtnProperty","classNames","replace","get_strings","key","component","label","addButton","setFooter"],"mappings":";;;;;;;AA0BAA,qCAAO,CACH,SACA,YACA,WACA,8BACD,SAASC,EAAGC,KAAMC,IAAKC,gBAClBC,SACJA,EAAI,CAOAC,QAAS,KAKTC,IAAK,CACDC,qBAAsB,kCACtBC,uBAAwB,6BAM5BC,SAAU,KAQVC,KAAMC,eAAeC,SAEjBR,EAAEC,QAAUO,QAGZR,EAAEK,eAAiBL,EAAES,+BAGrBb,EAAEI,EAAEE,IAAIC,sBAAsBO,GAAG,SAAS,WAClCV,EAAEK,WACFT,EAAEI,EAAEE,IAAIE,wBACHO,KAAK,gBAAiBf,EAAEgB,MAAMD,KAAK,kBACnCA,KAAK,YAAaf,EAAEgB,MAAMD,KAAK,cACpCX,EAAEK,SAASQ,WAInBjB,EAAE,QAAQkB,SAASd,EAAEE,IAAIE,uBAAwB,QAASJ,EAAEe,wBAOhEA,sBAAuB,eACfC,SAAWpB,EAAEgB,MAAMD,KAAK,iBACxBM,KAAOrB,EAAEgB,MAAMD,KAAK,aAExBO,EAAEC,KAAKC,WAAW,4BAEHvB,KAAKwB,KAAK,CAAC,CACtBC,WAAY,mDACZC,KAAM,CACFC,KAAMxB,EAAEC,QAAQuB,KAChBR,SAAUA,SACVC,KAAMA,SAIL,GACJQ,MAAK,WACFC,OAAOC,SAASC,YAEnBC,QAAO,WACJX,EAAEC,KAAKW,YAAY,+BAEtBC,MAAK,SAASC,IACXN,OAAOO,QAAQC,MAAM,sBAAwBF,GAAGG,aAU5D1B,6BAA8BF,uBA6DpBF,eAAiBN,WAAWqC,OAAO,CACrCC,sBAAsB,oBAvDPhC,UACfP,IACKwC,WAAW,0BAA2B,kBACtCb,MAAK,SAASc,GACXlC,SAASmC,SAAS,SAAWD,EAAI,cAsD7CE,CAAUpC,mBA5COA,UACbP,IACKwC,WAAW,8BAA+B,kBAC1Cb,MAAK,SAASc,GACXlC,SAASqC,QAAQH,MAyC7BG,CAAQrC,mBA/BWA,gBAETsC,kBAAoB,CACtBC,KAAM,SACNC,OAAQ,QAINC,kBAAoB,CACtBF,KAAM,OACNG,WAAY/C,EAAEE,IAAIE,uBAAuB4C,QAAQ,IAAK,KAG1DlD,IACKmD,YAAY,CACT,CAACC,IAAK,uBAAwBC,UAAW,kBACzC,CAACD,IAAK,0BAA2BC,UAAW,oBAE/C1B,MAAK,SAASc,GACXI,kBAAkBS,MAAQb,EAAE,GAC5BO,kBAAkBM,MAAQb,EAAE,GAC5BlC,SAASgD,UAAUP,kBAAmB,CAAC,WACvCzC,SAASgD,UAAUV,kBAAmB,CAAC,cAUnDW,CAAUjD,UAEHA"}