{"version":3,"file":"comment.min.js","sources":["../src/comment.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * JavaScript to manage comment feature.\n *\n * @package\n * @copyright 2017 The Open University\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * @module mod_openstudio/comment\n */\ndefine([\n    'jquery',\n    'core/ajax',\n    'core/str',\n    'mod_openstudio/scrollto',\n    'require',\n    'core/notification'\n], function($, Ajax, Str, Scrollto, require, Notification) {\n    var t;\n    t = {\n\n        /**\n         * Module config. Passed from server side.\n         * {\n         *     cmid: int,\n         *     cid: int\n         * }\n         */\n        mconfig: null,\n\n        /**\n         * Height from DOMElement to top browser.\n         */\n        HEIGHT_TO_TOP: 100,\n\n        /**\n         * List out all of css selector used in this module.\n         */\n        CSS: {\n            // Buttons.\n            ADD_NEW_BUTTON: '#id_addcomment',\n            REPLY_BUTTON: 'input[name=\"replycommentbutton\"]',\n            LIKE_BUTTON: '.openstudio-comment-flag-link',\n            DELETE_BUTTON: '.openstudio-comment-delete-link',\n            DELETE_CONFIRM_BUTTON: '.openstudio-comment-delete-btn',\n\n            // Forms.\n            COMMENT_FORM_CONTENT: '.openstudio-comment-form-content',\n            COMMENT_FORM: '.openstudio-comment-form', // Comment form wrapper.\n            COMMENT_REPLY_FORM: '.openstudio-comment-reply-form', // Reply form wrapper.\n            COMMENT_ATTACHMENT: '.openstudio-comment-form-content .filepicker-filename > a', // Attachment.\n\n            // Stream.\n            COMMENT_THREAD: '.openstudio-comment-thread', // Comment thread wrapper.\n            COMMENT_THREAD_BODY: '.openstudio-comment-thread-body', // Comment thread items wrapper.\n            REPLY_THREAD: '.openstudio-comment-thread-replied-items', // Reply items wrapper.\n            COMMENT_ITEM: '.openstudio-comment-thread-item', // Comment item.\n            FLAG_COUNT: '.openstudio-comment-flag-count',\n            FLAG_STATUS: '.openstudio-comment-flag-status',\n\n            // Dialogue.\n            DIALOG_HEADER: '.openstudio-comment-delete-header',\n            BOUNDING_BOX: '.openstudio-comment-dialogue-container' // Dialogue wrapper.\n\n        },\n\n        SELECTOR: {\n            COMMENT_BOX_ID: '#id_commentext', // Comment box ID.\n        },\n\n        /**\n         * Initialize module.\n         *\n         * @method init\n         * @param {JSON} options  The settings for this feature.\n         */\n        init: function(options) {\n\n            t.mconfig = options;\n\n            // Create delete dialog.\n            Y.use('moodle-core-notification-dialogue', function() {\n                require(['mod_openstudio/osdialogue'], function(osDialogue) {\n                    t.dialogue = t.createDeleteCommentDialogue(osDialogue);\n                });\n            });\n\n            // Click event on buttons.\n            // Add new button.\n            $(t.CSS.ADD_NEW_BUTTON).on('click', t.showCommentForm.bind(t));\n\n            $('body')\n                // Reply button.\n                .delegate(t.CSS.REPLY_BUTTON, 'click', t.showReplyForm)\n                // Like button.\n                .delegate(t.CSS.LIKE_BUTTON, 'click', t.likeComment)\n                // Delete button.\n                .delegate(t.CSS.DELETE_BUTTON, 'click', t.deleteConfirm)\n                // Delete confirm button.\n                .delegate(t.CSS.DELETE_CONFIRM_BUTTON, 'click', t.deleteComment);\n\n            // Form submit event.\n            $(t.CSS.COMMENT_FORM).find('form').on('submit', t.postComment);\n\n            // Resize event.\n            $(window).resize(t.resize);\n        },\n\n        /**\n         * Focus textarea.\n         *\n         * @param {String} textAreaId\n         */\n        focusTextArea: function(textAreaId) {\n            const atto = $(textAreaId + 'editable');\n            atto.attr('contenteditable', 'true');\n            atto.focus();\n        },\n\n        /**\n         * Show comment form\n         *\n         * @method showCommentForm\n         */\n        showCommentForm: function() {\n            // Append form to comment form wrapper.\n            $(t.CSS.COMMENT_FORM_CONTENT).appendTo(t.CSS.COMMENT_FORM);\n\n            // Adjust form state.\n            $(t.CSS.COMMENT_FORM_CONTENT).show(); // Show form content.\n            t.resetForm(); // Reset form.\n            $(t.CSS.ADD_NEW_BUTTON).hide(); // Hide add new comment button.\n            $(t.CSS.COMMENT_REPLY_FORM).hide(); // Hide comment reply forms.\n\n            // Set focus on comment form.\n            $('#openstudio_comment_form').focus();\n            t.focusTextArea(t.SELECTOR.COMMENT_BOX_ID);\n        },\n\n        /**\n         * Show reply form\n         *\n         * @method showReplyForm\n         */\n        showReplyForm: function() {\n            // Append form to reply form wrapper.\n            var commentid = $(this).data('comment-parent').trim();\n            var replyform = $(t.CSS.COMMENT_THREAD)\n                .filter(function() {\n                    return $(this).data('thread-items') == commentid;\n                })\n                .find(t.CSS.COMMENT_REPLY_FORM);\n            $(t.CSS.COMMENT_FORM_CONTENT).appendTo(replyform);\n            replyform.show();\n\n            // Adjust form state.\n            $(t.CSS.COMMENT_FORM_CONTENT).show(); // Show form content.\n            t.resetForm(); // Reset form.\n            $(t.CSS.ADD_NEW_BUTTON).show(); // Show add new comment button.\n            // Assign comment id to inreplyto field.\n            $(t.CSS.COMMENT_FORM_CONTENT).find('form input[name=\"inreplyto\"]').val(parseInt(commentid));\n\n            // Scroll to form.\n            Scrollto.scrollToEl(replyform, t.HEIGHT_TO_TOP);\n        },\n\n        /**\n         * Reset form.\n         *\n         * @method resetForm\n         */\n        resetForm: function() {\n            // Reset comment text field.\n            $(t.CSS.COMMENT_FORM_CONTENT).find('.editor_atto_content').html('');\n            // Reset inreplyto field.\n            $(t.CSS.COMMENT_FORM_CONTENT).find('form input[name=\"inreplyto\"]').val(0);\n            $(t.CSS.COMMENT_FORM_CONTENT).find('form').get(0).reset();\n            // Reset attachment field. Just a hack on UI.\n            $(t.CSS.COMMENT_ATTACHMENT).remove();\n        },\n\n        /**\n         * Add a new comment or reply a comment.\n         *\n         * @param {Object} e DomEvent\n         * @method postComment\n         */\n        postComment: function(e) {\n            // Prevent default form submit event.\n            e.preventDefault();\n            e.stopImmediatePropagation();\n\n            // Get form data.\n            var formdata = {};\n            $.each($(this).serializeArray(), function(i, field) {\n                formdata[field.name] = field.value;\n            });\n            var hasAttachment = $(t.CSS.COMMENT_ATTACHMENT).length > 0;\n\n            // Prevent from submitting to server if no content of comment is found.\n            if (!hasAttachment && formdata['commentext[text]'].length == 0) {\n                return;\n            }\n\n            M.util.js_pending('openstudioPostComment');\n            var promises = Ajax.call([{\n                methodname: 'mod_openstudio_external_add_comment',\n                args: {\n                    cmid: formdata.cmid,\n                    cid: formdata.cid,\n                    inreplyto: parseInt(formdata.inreplyto.trim()),\n                    commenttext: formdata['commentext[text]'],\n                    commenttextitemid: formdata['commentext[itemid]'],\n                    commentattachment: hasAttachment ? formdata.commentattachment : 0\n                }\n            }]);\n\n            promises[0]\n                .done(function(res) {\n                    // Adjust form state.\n                    $(t.CSS.ADD_NEW_BUTTON).show(); // Show add new comment button.\n                    $(t.CSS.COMMENT_FORM_CONTENT).hide(); // Hide comment form.\n                    $(t.CSS.COMMENT_REPLY_FORM).hide(); // Show reply form.\n\n                    var commentparent = parseInt(formdata.inreplyto.trim());\n                    if (commentparent) { // New reply for a certain comment thread.\n\n                        // Append new reply to comment thread.\n                        $(t.CSS.COMMENT_THREAD)\n                            .filter(function() {\n                                return $(this).data('thread-items') == commentparent;\n                            })\n                            .find(t.CSS.REPLY_THREAD)\n                            .find(t.CSS.COMMENT_ITEM)\n                            .last()\n                            .before(res.commenthtml);\n\n                        // Scroll to added item.\n                        Scrollto.scrollToEl($('[data-thread-item=\"' + res.commentid + '\"]'), t.HEIGHT_TO_TOP);\n\n                    } else { // New comment added.\n\n                        // Append new comment to comment thread.\n                        $(t.CSS.COMMENT_THREAD_BODY).append(res.commenthtml);\n\n                        // Scroll to added item.\n                        Scrollto.scrollToEl($('[data-thread-items=\"' + res.commentid + '\"]'), t.HEIGHT_TO_TOP);\n                    }\n\n                    t.resize();\n\n                    $(t.CSS.COMMENT_THREAD).show();\n\n                    // Set focus on comment form.\n                    $('#openstudio_comment_form').focus();\n                    t.focusTextArea(t.SELECTOR.COMMENT_BOX_ID);\n\n                    // Trigger oumedia plugin to render audio attachment.\n                    if (window.oump) {\n                        window.oump.harvest();\n                    }\n                })\n                .always(function() {\n                    M.util.js_complete('openstudioPostComment');\n                })\n                .fail(Notification.exception);\n        },\n\n        /**\n         * Like comment\n         *\n         * @param {object} e DomEvent\n         * @method likeComment\n         */\n        likeComment: function(e) {\n            e.preventDefault();\n            var likebtn = $(this);\n\n            M.util.js_pending('openstudioLikeComment');\n            var promises = Ajax.call([{\n                methodname: 'mod_openstudio_external_flag_comment',\n                args: {\n                    cmid: t.mconfig.cmid,\n                    cid: t.mconfig.cid,\n                    commentid: likebtn.data('comment-id')\n                }\n            }]);\n\n            promises[0]\n                .done(function(res) {\n                    likebtn\n                        .hide()\n                        // Update flag count.\n                        .siblings(t.CSS.FLAG_STATUS + '.flagged').children(t.CSS.FLAG_COUNT).addClass('flagged').text(res.count)\n                        // Update flag status.\n                        .parent().removeClass('openstudio-hidden')\n                        .siblings(t.CSS.FLAG_STATUS + '.unflagged').addClass('openstudio-hidden');\n                })\n                .always(function() {\n                    M.util.js_complete('openstudioLikeComment');\n                })\n                .fail(function(ex) {\n                    window.console.error('Log request failed ' + ex.message);\n                });\n        },\n\n        /**\n         * Delete comment\n         *\n         * @method deleteComment\n         */\n        deleteComment: function() {\n            var commentid = parseInt($(this).attr('data-comment-id'));\n\n            M.util.js_pending('openstudioDeleteComment');\n            var promises = Ajax.call([{\n                methodname: 'mod_openstudio_external_delete_comment',\n                args: {\n                    cmid: t.mconfig.cmid,\n                    commentid: commentid\n                }\n            }]);\n\n            promises[0]\n                .done(function() {\n                    // Move comment form to another place to avoid form removed.\n                    $(t.CSS.COMMENT_FORM_CONTENT).appendTo(t.CSS.COMMENT_FORM);\n\n                    var commenttream = $('[data-thread-items=\"' + commentid + '\"]');\n                    var replyitem = $('[data-thread-item=\"' + commentid + '\"]');\n\n                    if (commenttream.length > 0) {\n                        // Removing comment thread means reply items of it removed also.\n                        commenttream.remove();\n                    } else {\n                        // Remove reply item.\n                        replyitem.remove();\n                    }\n\n                    // Check if there is a comment thread at least.\n                    if ($('div[data-thread-items]').length == 0) {\n                        // If there is no comment thread, then hide comment feature in UI.\n                        $(t.CSS.COMMENT_THREAD).hide();\n                    }\n\n                    // Hide delete dialogue.\n                    t.dialogue.hide();\n\n                    // Set focus on comment form.\n                    t.dialogue.after('visibleChange', function() {\n                        $('#openstudio_comment_form').focus();\n                    }, t.dialogue);\n                })\n                .always(function() {\n                    M.util.js_complete('openstudioDeleteComment');\n                })\n                .fail(function(ex) {\n                    window.console.error('Log request failed ' + ex.message);\n                });\n        },\n\n        /**\n         * Create delete comment dialogue and some events on it.\n         *\n         * @param {object} osDialogue object\n         * @return {object} OSDialogue instance\n         * @method createDeleteCommentDialogue\n         */\n        createDeleteCommentDialogue: function(osDialogue) {\n            var folderClass = '';\n            if (t.mconfig.folder) {\n                folderClass = 'openstudio-folder';\n            }\n            var dialogue = new osDialogue({\n                closeButton: true,\n                visible: false,\n                centered: true,\n                responsive: true,\n                responsiveWidth: 767,\n                modal: true,\n                focusOnPreviousTargetAfterHide: true,\n                width: 521,\n                extraClasses: [t.CSS.BOUNDING_BOX.replace('.', ''), folderClass]\n            });\n\n            // Button [Cancel]\n            var cancelBtnProperty = {\n                name: 'cancel',\n                classNames: 'openstudio-cancel-btn',\n                action: 'hide'\n            };\n            // Button [Delete]\n            var deleteBtnProperty = {\n                name: 'delete',\n                classNames: t.CSS.DELETE_CONFIRM_BUTTON.replace('.', '')\n            };\n            Str\n                .get_strings([\n                    {key: 'contentcommentsdelete', component: 'mod_openstudio'},\n                    {key: 'modulejsdialogcommentdeleteconfirm', component: 'mod_openstudio'},\n                    {key: 'modulejsdialogcancel', component: 'mod_openstudio'},\n                    {key: 'modulejsdialogdelete', component: 'mod_openstudio'}\n                ])\n                .done(function(s) {\n                    cancelBtnProperty.label = s[2];\n                    deleteBtnProperty.label = s[3];\n\n                    dialogue.set('headerContent',\n                        '<span class=\"openstudio-dialogue-common-header ' + t.CSS.DIALOG_HEADER.replace('.', '') +\n                        '\">' + s[0] + '</span>');\n                    dialogue.set('bodyContent', s[1]);\n                    dialogue.addButton(deleteBtnProperty, ['footer']);\n                    dialogue.addButton(cancelBtnProperty, ['footer']);\n                });\n\n            return dialogue;\n        },\n\n        /**\n         * Delete confirmation.\n         *\n         * @param {Object} e DomEvent\n         * @method deleteConfirm\n         */\n        deleteConfirm: function(e) {\n            e.preventDefault();\n            if (t.dialogue) {\n                // Update comment id for delete button.\n                $(t.CSS.DELETE_CONFIRM_BUTTON).attr('data-comment-id', $(this).data('comment-id'));\n                // Show delete dialogue.\n                t.dialogue.show();\n            }\n        },\n\n        /**\n         * Resize and update dialogue position.\n         * @method resize\n         */\n        resize: function() {\n            if (!t.dialogue) {\n                return;\n            }\n\n            if (t.dialogue.get('visible')) {\n                if (Y.one('body').get('winWidth') <= t.dialogue.get('responsiveWidth')) {\n                    t.dialogue.makeResponsive();\n                } else {\n                    t.dialogue.centerDialogue();\n                }\n            }\n        }\n    };\n\n    return t;\n});\n"],"names":["define","$","Ajax","Str","Scrollto","require","Notification","t","mconfig","HEIGHT_TO_TOP","CSS","ADD_NEW_BUTTON","REPLY_BUTTON","LIKE_BUTTON","DELETE_BUTTON","DELETE_CONFIRM_BUTTON","COMMENT_FORM_CONTENT","COMMENT_FORM","COMMENT_REPLY_FORM","COMMENT_ATTACHMENT","COMMENT_THREAD","COMMENT_THREAD_BODY","REPLY_THREAD","COMMENT_ITEM","FLAG_COUNT","FLAG_STATUS","DIALOG_HEADER","BOUNDING_BOX","SELECTOR","COMMENT_BOX_ID","init","options","Y","use","osDialogue","dialogue","createDeleteCommentDialogue","on","showCommentForm","bind","delegate","showReplyForm","likeComment","deleteConfirm","deleteComment","find","postComment","window","resize","focusTextArea","textAreaId","atto","attr","focus","appendTo","show","resetForm","hide","commentid","this","data","trim","replyform","filter","val","parseInt","scrollToEl","html","get","reset","remove","e","preventDefault","stopImmediatePropagation","formdata","each","serializeArray","i","field","name","value","hasAttachment","length","M","util","js_pending","call","methodname","args","cmid","cid","inreplyto","commenttext","commenttextitemid","commentattachment","done","res","commentparent","last","before","commenthtml","append","oump","harvest","always","js_complete","fail","exception","likebtn","siblings","children","addClass","text","count","parent","removeClass","ex","console","error","message","commenttream","replyitem","after","folderClass","folder","closeButton","visible","centered","responsive","responsiveWidth","modal","focusOnPreviousTargetAfterHide","width","extraClasses","replace","cancelBtnProperty","classNames","action","deleteBtnProperty","get_strings","key","component","s","label","set","addButton","one","makeResponsive","centerDialogue"],"mappings":"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"}