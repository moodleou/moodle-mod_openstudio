{"version":3,"file":"subscribe.min.js","sources":["../src/subscribe.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * JavaScript to manage subscribe/unsubscribe feature.\n *\n * @package\n * @copyright 2017 The Open University\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * @module mod_openstudio/subscribe\n */\ndefine([\n    'jquery',\n    'core/templates',\n    'core/str',\n    'core/ajax',\n    'mod_openstudio/osdialogue',\n], function($, Templates, Str, ajax, osDialogue) {\n    var t;\n    t = {\n\n        /**\n         * Subscription dialogue instance.\n         */\n        dialogue: null,\n\n        /**\n         * Module config. Passed from server side.\n         */\n        mconfig: null,\n\n        /**\n         * List out all of css selector used in subscription module.\n         */\n        CSS: {\n            SUBSCRIBESETTING: '.openstudio-subscribe-button',\n            BOUNDINGBOX: '.openstudio-subscribe-dialog-container',\n            DIALOGHEADER: '.openstudio-subscription-header',\n            SUBSCRIBEBUTTON: 'button[name=\"subscribebutton\"]'\n        },\n\n        /**\n         * Initialize module.\n         *\n         * @param {JSON} options  The settings for subscription feature.\n         * @method init\n         */\n        init: async function(options) {\n            t.mconfig = options;\n\n            // Create subscription dialogue.\n            t.dialogue = await t.createSubscriptionDialogue();\n\n            // Click event on subscription button.\n            $(t.CSS.SUBSCRIBEBUTTON).on('click', function() {\n                if (t.issubscribed()) {\n                    t.unsubscribe();\n                } else {\n                    t.dialogue.show();\n                }\n            });\n        },\n\n        /**\n         * Create subscription dialogue and some events on it.\n         *\n         * @returns {Promise<Modal>}\n         * @method createSubscriptionDialogue\n         */\n        createSubscriptionDialogue: async function() {\n            /**\n             * Set header for dialog.\n             *\n             * @param {Object} dialogue\n             * @method setHeader\n             */\n            function setHeader(dialogue) {\n                Str\n                    .get_string('subscriptiondialogheader', 'mod_openstudio')\n                    .done(function(s) {\n                        dialogue.setTitle('<span class=\"' + t.CSS.DIALOGHEADER.replace('.', '') +\n                            '\">' + s + '</span>');\n                    });\n            }\n\n            /**\n             * Set body for dialog.\n             *\n             * @param {Object} dialogue\n             * @method setBody\n             */\n            function setBody(dialogue) {\n                Templates\n                    .render('mod_openstudio/subscribe_dialog', t.mconfig.constants)\n                    .done(function(html) {\n                        dialogue.setBody(html);\n                    });\n            }\n\n            /**\n             * Set footer for dialog.\n             *\n             * @param {Object} dialogue\n             * @method setFooter\n             */\n            function setFooter(dialogue) {\n                Str\n                    .get_strings([\n                        {key: 'subscriptiondialogcancel', component: 'mod_openstudio'},\n                        {key: 'subscribe', component: 'mod_openstudio'},\n                    ])\n                    .done(function(s) {\n                        // Button [Cancel].\n                        const cancelBtnProperty = {\n                            name: 'cancel',\n                            label: s[0],\n                            classNames: 'openstudio-cancel-btn',\n                            action: 'hide',\n                        };\n                        dialogue.addButton(cancelBtnProperty, ['footer']);\n\n                        // Button [Subscribe].\n                        const subscribeBtnProperty = {\n                            name: 'subscribe',\n                            label: s[1],\n                            classNames: 'openstudio-subscript-btn',\n                            events: {\n                                click: t.subscribe.bind(t),\n                            },\n                        };\n                        dialogue.addButton(subscribeBtnProperty, ['footer']);\n                    });\n            }\n\n            const dialogue = await osDialogue.create({\n                isVerticallyCentered: true,\n                templateContext: {\n                    extraClasses: t.CSS.BOUNDINGBOX.replace('.', ''),\n                },\n            });\n\n            setHeader(dialogue);\n            setBody(dialogue);\n            setFooter(dialogue);\n\n            return dialogue;\n        },\n\n        /**\n         * Subscribe\n         * @method subscribe\n         */\n        subscribe: function() {\n            /**\n             * Do subscribe.\n             * @method doSubscribe\n             */\n            function doSubscribe() {\n\n                var args = {\n                    openstudioid: t.mconfig.openstudioid,\n                    emailformat: $('select[name=\"openstudio-subscription-email-format\"]').val(),\n                    frequency: $('select[name=\"openstudio-subscription-email-frequency\"]').val(),\n                    userid: t.mconfig.userid\n                };\n\n                M.util.js_pending('openstudioSubscribe');\n\n                var promises = ajax.call([{\n                    methodname: 'mod_openstudio_external_subscribe',\n                    args: args\n                }]);\n\n                promises[0]\n                    .done(function(res) {\n                        updateSubscriptionButtonState(res.subscriptionid);\n                    })\n                    .always(function() {\n                        M.util.js_complete('openstudioSubscribe');\n                    })\n                    .fail(function(ex) {\n                        window.console.error('Log request failed ' + ex.message);\n                    });\n            }\n\n            /**\n             * Set Subscribe button text.\n             * @param {int} subscriptionid\n             * @method updateSubscriptionButtonState\n             */\n            function updateSubscriptionButtonState(subscriptionid) {\n                Str\n                    .get_string('unsubscribe', 'mod_openstudio')\n                    .done(function(s) {\n                        $(t.CSS.SUBSCRIBEBUTTON).text(s);\n                        $('#openstudio_subscribe_button').focus();\n                    });\n\n                $(t.CSS.SUBSCRIBEBUTTON).attr('subscriptionid', subscriptionid);\n            }\n\n            t.dialogue.hide();\n            doSubscribe();\n        },\n\n        /**\n         * Unsubscribe.\n         * @method unsubscribe\n         */\n        unsubscribe: function() {\n            /**\n             * Do subscribe.\n             * @method doUnsubscribe\n             */\n            function doUnsubscribe() {\n                var args = {\n                    subscriptionid: $(t.CSS.SUBSCRIBEBUTTON).attr('subscriptionid'),\n                    userid: t.mconfig.userid,\n                    cmid: t.mconfig.cmid\n                };\n\n                M.util.js_pending('openstudioUnsubscribe');\n\n                var promises = ajax.call([{\n                    methodname: 'mod_openstudio_external_unsubscribe',\n                    args: args\n                }]);\n\n                promises[0]\n                    .done(function() {\n                        updateSubscriptionButtonState();\n                    })\n                    .always(function() {\n                        M.util.js_complete('openstudioUnsubscribe');\n                    })\n                    .fail(function(ex) {\n                        window.console.warn('Log request failed ' + ex.message);\n                    });\n            }\n\n            /**\n             * Set Subscribe button text.\n             * @method updateSubscriptionButtonState\n             */\n            function updateSubscriptionButtonState() {\n                Str\n                    .get_string('subscribetothisstudio', 'mod_openstudio')\n                    .done(function(s) {\n                        $(t.CSS.SUBSCRIBEBUTTON).text(s);\n                    });\n\n                $(t.CSS.SUBSCRIBEBUTTON).removeAttr('subscriptionid');\n            }\n\n            doUnsubscribe();\n        },\n\n        /**\n         * Check if Studio is subscribed.\n         * @method issubscribed\n         * @return {boolean}\n         */\n        issubscribed: function() {\n            return ($(t.CSS.SUBSCRIBEBUTTON)[0].hasAttribute('subscriptionid'));\n        },\n    };\n\n    return t;\n});\n"],"names":["define","$","Templates","Str","ajax","osDialogue","t","dialogue","mconfig","CSS","SUBSCRIBESETTING","BOUNDINGBOX","DIALOGHEADER","SUBSCRIBEBUTTON","init","async","options","createSubscriptionDialogue","on","issubscribed","unsubscribe","show","create","isVerticallyCentered","templateContext","extraClasses","replace","get_string","done","s","setTitle","setHeader","render","constants","html","setBody","get_strings","key","component","cancelBtnProperty","name","label","classNames","action","addButton","subscribeBtnProperty","events","click","subscribe","bind","setFooter","args","hide","openstudioid","emailformat","val","frequency","userid","M","util","js_pending","call","methodname","res","subscriptionid","text","focus","attr","always","js_complete","fail","ex","window","console","error","message","cmid","removeAttr","warn","hasAttribute"],"mappings":"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"}