{"version":3,"file":"subscribe.min.js","sources":["../src/subscribe.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * JavaScript to manage subscribe/unsubscribe feature.\n *\n * @package\n * @copyright 2017 The Open University\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * @module mod_openstudio/subscribe\n */\ndefine([\n    'jquery',\n    'core/yui',\n    'core/templates',\n    'core/str',\n    'core/ajax',\n    'require'\n], function($, Y, Templates, Str, ajax, require) {\n    var t;\n    t = {\n\n        /**\n         * M.core.dialog instance\n         */\n        dialogue: null,\n\n        /**\n         * Module config. Passed from server side.\n         */\n        mconfig: null,\n\n        /**\n         * List out all of css selector used in subscription module.\n         */\n        CSS: {\n            SUBSCRIBESETTING: '.openstudio-subscribe-button',\n            BOUNDINGBOX: '.openstudio-subscribe-dialog-container',\n            DIALOGHEADER: '.openstudio-subscription-header',\n            SUBSCRIBEBUTTON: 'button[name=\"subscribebutton\"]'\n        },\n\n        /**\n         * Initialize module.\n         *\n         * @param {JSON} options  The settings for subscription feature.\n         * @method init\n         */\n        init: function(options) {\n            t.mconfig = options;\n\n            // Create subscription dialogue.\n            Y.use('moodle-core-notification-dialogue', function() {\n                require(['mod_openstudio/osdialogue'], function(osDialogue){\n                    t.dialogue = t.createSubscriptionDialogue(osDialogue, t.CSS.BOUNDINGBOX);\n                });\n            });\n\n            // Click event on subscription button.\n            $(t.CSS.SUBSCRIBEBUTTON).on('click', function() {\n                if (t.issubscribed()) {\n                    t.unsubscribe();\n                } else {\n                    t.dialogue.show();\n                    t.resize();\n                }\n            });\n\n            $(window).resize(t.resize.bind(t));\n        },\n\n        /**\n         * Create subscription dialogue and some events on it.\n         *\n         * @param {object} osDialogue OSDialogue object\n         * @param {string} boundingBoxClass The class wrapping the subscription dialog\n         * @return {object} OSDialogue instance\n         * @method createSubscriptionDialogue\n         */\n        createSubscriptionDialogue: function(osDialogue, boundingBoxClass) {\n            /**\n             * Set header for dialog\n             * @method setHeader\n             */\n            function setHeader() {\n                Str\n                    .get_string('subscriptiondialogheader', 'mod_openstudio')\n                    .done(function(s) {\n                        dialogue.set('headerContent',\n                            '<span class=\"' + t.CSS.DIALOGHEADER.replace('.', '') +\n                            '\">' + s + '</span>');\n                    });\n            }\n\n            /**\n             * Set body for dialog\n             * @method setBody\n             */\n            function setBody() {\n                Templates\n                    .render('mod_openstudio/subscribe_dialog', t.mconfig.constants)\n                    .done(function(html) {\n                        dialogue.set('bodyContent', html);\n                    });\n            }\n\n            /**\n             * Set body for dialog\n             * @method setBody\n             */\n            function setFooter() {\n                Str\n                    .get_strings([\n                        {key: 'subscriptiondialogcancel', component: 'mod_openstudio'},\n                        {key: 'subscribe', component: 'mod_openstudio'}\n                    ])\n                    .done(function(s) {\n                        // Button [Cancel]\n                        var cancelBtnProperty = {\n                            name: 'cancel',\n                            label: s[0],\n                            classNames: 'openstudio-cancel-btn',\n                            action: 'hide'\n                        };\n                        dialogue.addButton(cancelBtnProperty, ['footer']);\n\n                        // Button [Subscribe]\n                        var subscribeBtnProperty = {\n                            name: 'subscribe',\n                            label: s[1],\n                            classNames: 'openstudio-subscript-btn',\n                            events: {\n                                click: t.subscribe.bind(t)\n                            }\n                        };\n                        dialogue.addButton(subscribeBtnProperty, ['footer']);\n                    });\n            }\n\n            var dialogue = new osDialogue({\n                closeButton: true,\n                visible: false,\n                centered: false,\n                responsive: true,\n                focusOnPreviousTargetAfterHide: true,\n                extraClasses: [boundingBoxClass.replace('.', '')],\n            });\n\n            setHeader();\n            setBody();\n            setFooter();\n\n            return dialogue;\n        },\n\n        /**\n         * Subscribe\n         * @method subscribe\n         */\n        subscribe: function() {\n            /**\n             * Do subscribe.\n             * @method doSubscribe\n             */\n            function doSubscribe() {\n\n                var args = {\n                    openstudioid: t.mconfig.openstudioid,\n                    emailformat: $('select[name=\"openstudio-subscription-email-format\"]').val(),\n                    frequency: $('select[name=\"openstudio-subscription-email-frequency\"]').val(),\n                    userid: t.mconfig.userid\n                };\n\n                M.util.js_pending('openstudioSubscribe');\n\n                var promises = ajax.call([{\n                    methodname: 'mod_openstudio_external_subscribe',\n                    args: args\n                }]);\n\n                promises[0]\n                    .done(function(res) {\n                        updateSubscriptionButtonState(res.subscriptionid);\n                    })\n                    .always(function() {\n                        M.util.js_complete('openstudioSubscribe');\n                    })\n                    .fail(function(ex) {\n                        window.console.error('Log request failed ' + ex.message);\n                    });\n            }\n\n            /**\n             * Set Subscribe button text.\n             * @param {int} subscriptionid\n             * @method updateSubscriptionButtonState\n             */\n            function updateSubscriptionButtonState(subscriptionid) {\n                Str\n                    .get_string('unsubscribe', 'mod_openstudio')\n                    .done(function(s) {\n                        $(t.CSS.SUBSCRIBEBUTTON).text(s);\n                        $('#openstudio_subscribe_button').focus();\n                    });\n\n                $(t.CSS.SUBSCRIBEBUTTON).attr('subscriptionid', subscriptionid);\n            }\n\n            t.dialogue.hide();\n            doSubscribe();\n        },\n\n        /**\n         * Unsubscribe.\n         * @method unsubscribe\n         */\n        unsubscribe: function() {\n            /**\n             * Do subscribe.\n             * @method doUnsubscribe\n             */\n            function doUnsubscribe() {\n                var args = {\n                    subscriptionid: $(t.CSS.SUBSCRIBEBUTTON).attr('subscriptionid'),\n                    userid: t.mconfig.userid,\n                    cmid: t.mconfig.cmid\n                };\n\n                M.util.js_pending('openstudioUnsubscribe');\n\n                var promises = ajax.call([{\n                    methodname: 'mod_openstudio_external_unsubscribe',\n                    args: args\n                }]);\n\n                promises[0]\n                    .done(function() {\n                        updateSubscriptionButtonState();\n                    })\n                    .always(function() {\n                        M.util.js_complete('openstudioUnsubscribe');\n                    })\n                    .fail(function(ex) {\n                        window.console.warn('Log request failed ' + ex.message);\n                    });\n            }\n\n            /**\n             * Set Subscribe button text.\n             * @method updateSubscriptionButtonState\n             */\n            function updateSubscriptionButtonState() {\n                Str\n                    .get_string('subscribetothisstudio', 'mod_openstudio')\n                    .done(function(s) {\n                        $(t.CSS.SUBSCRIBEBUTTON).text(s);\n                    });\n\n                $(t.CSS.SUBSCRIBEBUTTON).removeAttr('subscriptionid');\n            }\n\n            doUnsubscribe();\n        },\n\n        /**\n         * Check if Studio is subscribed.\n         * @method issubscribed\n         * @return {boolean}\n         */\n        issubscribed: function() {\n            return ($(t.CSS.SUBSCRIBEBUTTON)[0].hasAttribute('subscriptionid'));\n        },\n\n        /**\n         * Resize and update dialogue position.\n         * @method resize\n         */\n        resize: function() {\n            var visible = t.dialogue.get('visible');\n\n            // Is mobile view.\n            if (Y.one('body').get('winWidth') > 767) {\n                var dialoguetop = $(t.CSS.SUBSCRIBESETTING).offset().top + 3;\n                var dialogueleft = $(t.CSS.SUBSCRIBESETTING).offset().left - 330;\n                t.dialogue\n                    .get('boundingBox')\n                    .setStyles({\n                       top: dialoguetop,\n                       left: dialogueleft,\n                       width: 316\n                    });\n\n                if (t.sizing == 'large') {\n                    return;\n                }\n\n                // Update dialog sizing.\n                t.dialogue.hide();\n                t.sizing = 'large';\n\n                if (visible) {\n                    t.dialogue.show();\n                }\n\n                t.dialogue\n                    .get('boundingBox')\n                    .setStyles({\n                       top: dialoguetop,\n                       left: dialogueleft,\n                       width: 316\n                    });\n            } else {\n                if (t.sizing == 'small') {\n                    return;\n                }\n\n                // Update dialog sizing.\n                t.sizing = 'small';\n\n                t.dialogue.hide();\n\n                if (visible) {\n                    t.dialogue.show();\n                }\n\n                $(t.CSS.BOUNDINGBOX).parent().appendTo($('body'));\n            }\n        }\n    };\n\n    return t;\n});\n"],"names":["define","$","Y","Templates","Str","ajax","require","t","dialogue","mconfig","CSS","SUBSCRIBESETTING","BOUNDINGBOX","DIALOGHEADER","SUBSCRIBEBUTTON","init","options","use","osDialogue","createSubscriptionDialogue","on","issubscribed","unsubscribe","show","resize","window","bind","boundingBoxClass","closeButton","visible","centered","responsive","focusOnPreviousTargetAfterHide","extraClasses","replace","get_string","done","s","set","render","constants","html","get_strings","key","component","cancelBtnProperty","name","label","classNames","action","addButton","subscribeBtnProperty","events","click","subscribe","args","hide","openstudioid","emailformat","val","frequency","userid","M","util","js_pending","call","methodname","res","subscriptionid","text","focus","attr","always","js_complete","fail","ex","console","error","message","cmid","removeAttr","warn","hasAttribute","get","one","dialoguetop","offset","top","dialogueleft","left","setStyles","width","sizing","parent","appendTo"],"mappings":"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"}